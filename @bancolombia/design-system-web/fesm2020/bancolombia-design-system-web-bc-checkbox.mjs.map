{"version":3,"file":"bancolombia-design-system-web-bc-checkbox.mjs","sources":["../../../projects/ng_bds/bc-checkbox/bc-checkbox-group/bc-checkbox-group.component.ts","../../../projects/ng_bds/bc-checkbox/bc-checkbox-group/bc-checkbox-group.component.html","../../../projects/ng_bds/bc-checkbox/bc-checkbox.component.ts","../../../projects/ng_bds/bc-checkbox/bc-checkbox.component.html","../../../projects/ng_bds/bc-checkbox/bc-checkbox.module.ts","../../../projects/ng_bds/bc-checkbox/bancolombia-design-system-web-bc-checkbox.ts"],"sourcesContent":["import { Component, Output, EventEmitter, Input, Optional, Self } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { BcGeneralInputComponent } from '@bancolombia/design-system-web/bc-helpers';\n\n@Component({\n  selector: 'bc-checkbox-group',\n  templateUrl: './bc-checkbox-group.component.html',\n})\nexport class BcCheckBoxGroupComponent extends BcGeneralInputComponent {\n  /**\n   * Indica si el checkbox esta habilitado\n   *\n   * @type {boolean}\n   * @memberof BcCheckboxComponent\n   */\n  @Input() enabled = true;\n\n  @Output() onDisabled = new EventEmitter<boolean>();\n  @Output() changeValue = new EventEmitter<any>();\n\n  constructor(@Self() @Optional() public controlDirective: NgControl) {\n    super();\n    if (controlDirective) {\n      controlDirective.valueAccessor = this as BcGeneralInputComponent;\n    }\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    this.enabled = isDisabled;\n    this.onDisabled.emit(this.enabled)\n  }\n  \n  writeValue(value) {\n    if (typeof value != 'undefined') {\n      this.value = value;\n      this.changeValue.emit(this.controlDirective.value);\n    }\n  }\n}\n","<ng-content></ng-content>","import {\n  Component,\n  Input,\n  EventEmitter,\n  Output,\n  AfterViewInit,\n  Host,\n  Optional,\n  ElementRef,\n  Self,\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { BcHelperService, BcGeneralInputComponent } from '@bancolombia/design-system-web/bc-helpers';\nimport { BcCheckBoxGroupComponent } from './bc-checkbox-group/bc-checkbox-group.component';\nimport { BcCheckboxBehavior } from '@bancolombia/design-system-behaviors';\n\n/**\n * Importa el componente de Checks con los diseños de Bancolombia S.A.\n *\n * @export\n * @class BcCheckboxComponent\n */\n@Component({\n  selector: 'bc-checkbox',\n  templateUrl: 'bc-checkbox.component.html',\n})\n\nexport class BcCheckboxComponent extends BcGeneralInputComponent implements AfterViewInit {\n  /**\n   * Id del elemento checkbox.\n   *\n   * @type {string}\n   * @memberof BcCheckboxComponent\n   */\n  @Input() id = '';\n  /**\n   * Nombre del checkbox.\n   *\n   * @type {string}\n   * @memberof BcCheckboxComponent\n   */\n  @Input() name = '';\n  /**\n   * Valor del checkbox.\n   *\n   * @type {string}\n   * @memberof BcCheckboxComponent\n   */\n  @Input('value') currentValue = '';\n  /**\n   * Texto del checkbox que aparece a la derecha del mismo.\n   *\n   * @type {string}\n   * @memberof BcCheckboxComponent\n   */\n  @Input() label = '';\n  /**\n   * Indica si el checkbox esta habilitado.\n   *\n   * @type {boolean}\n   * @memberof BcCheckboxComponent\n   */\n  @Input() enabled = true;\n  /**\n   * Indica si el checkbox esta en estado check.\n   *\n   * @type {boolean}\n   * @memberof BcCheckboxComponent\n   */\n  @Input() isChecked = false;\n  /**\n   * Define el componente como indeterminado.\n   *\n   * @type {boolean}\n   * @memberof BcCheckboxComponent\n   */\n  @Input() indeterminate = false;\n\n  /**\n   * Valor cada vez que cambia el checkbox.\n   *\n   * @type {EventEmitter<boolean>}\n   * @memberof BcCheckboxComponent\n   */\n  @Output() changeState: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /**\n   * Valor seleccionado.\n   *\n   * @type {EventEmitter<any>}\n   * @memberof BcRadioComponent\n   */\n  @Output() changeStateForParent: EventEmitter<any> = new EventEmitter<any>();\n\n  outline = false;\n  constructor(\n    private elmRef: ElementRef,\n    @Self() @Optional() public controlDirective: NgControl,\n    @Optional() @Host() private checkboxGroup: BcCheckBoxGroupComponent,\n    private helper: BcHelperService\n  ) {\n    super();\n    if (controlDirective) {\n      controlDirective.valueAccessor = this as BcGeneralInputComponent;\n      BcCheckboxBehavior.setUpAll();\n    }\n  }\n\n  ngAfterViewInit() {\n    this.changeStateForParent.emit(this.isChecked);\n\n    if (this.checkboxGroup) {\n      this.checkboxGroup.onDisabled.subscribe(isDisabledCheckoxGroup => {\n        this.toogleDisabled(isDisabledCheckoxGroup)\n      })\n    }\n  }\n\n  /**\n   * Metodo que cambia el estado del checkbox y emite si esta seleccionado.\n   *\n   * @memberof BcCheckboxComponent\n   */\n  toggle() {\n    this.isChecked = !this.isChecked;\n    this.changeState.emit(this.isChecked);\n    if (this.checkboxGroup) {\n      this.checkboxGroup.addOrRemove(this.currentValue);\n      this.checkboxGroup.onTouch();\n      this.checkboxGroup.changeValue.emit(this.value);\n    }\n    this.value = this.isChecked ? this.currentValue : null;\n    this.onChange(this.value);\n    this.onTouch();\n\n  }\n\n  toogleDisabled(isDisabled: boolean) {\n    this.enabled = !isDisabled;\n  }\n\n  get isCheckBoxChecked() {\n    if (this.checkboxGroup) {\n      this.isChecked = this.checkboxGroup.contains(this.currentValue);\n    }\n    return this.isChecked;\n  }\n\n  /**\n   * Metodo para accesibilidad.\n   *\n   * @param {KeyboardEvent} event\n   * @memberof BcCheckboxComponent\n   */\n  keyEvent(event: KeyboardEvent) {\n    this.outline = this.helper.keyEvent(event, {\n      event: () => {\n        this.toggle();\n      },\n    });\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    this.enabled = !isDisabled;\n  }\n\n  writeValue(value) {\n    if (typeof value != 'undefined') {\n      this.value = value;\n      this.onChange(this.value);\n      this.onTouch();\n    }\n  }\n}\n","<label id=\"{{id}}\" class=\"bc-container-checkbox\">{{label}}\n  <input type=\"checkbox\" (click)=\"toggle()\" tabindex=\"{{!enabled ? -1 : 0}}\" [id]=id [name]=name \n    [value]=value [disabled]=!enabled [indeterminate]=indeterminate [checked]=isCheckBoxChecked>\n  <span class=\"bc-checkbox\" tabindex=\"-1\"></span>\n</label>\n","import { NgModule } from '@angular/core';\nimport { BcCheckboxComponent } from './bc-checkbox.component';\nimport { BcCheckBoxGroupComponent } from './bc-checkbox-group/bc-checkbox-group.component';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Importa el componete de Checks con\n * los diseños de Bancolombia S.A.\n * @package bc-checkbox\n * @Component bc-checkbox\n * @param  id Identificador unico||  (default)\n * @param  name Nombre del componente ||  (default)\n * @param  value Valor del componente ||  (default)\n * @param  label Texto del checkbox || (default)\n * @param  enabled Habilita o deshabilita el componente || true (default)\n * @param  isChecked Selecciona el check|| false (default)\n * @param  indeterminate Define el componente como indeterminado || false (default)\n * @param  themeDark Aplica diferentes estilos si se usara en aplicaciones oscuras || false (default)\n * @example\n *                    <bc-checkbox [isChecked]=\"true\"></bc-checkbox>\n *\n *\n * @author: Bancolombia S.A\n */\n@NgModule({\n  declarations: [BcCheckboxComponent, BcCheckBoxGroupComponent],\n  imports: [CommonModule],\n  exports: [BcCheckboxComponent, BcCheckBoxGroupComponent],\n})\nexport class BcCheckboxModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i2.BcCheckBoxGroupComponent"],"mappings":"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"}