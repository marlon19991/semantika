{"version":3,"file":"bancolombia-design-system-web-bc-alert.mjs","sources":["../../../projects/ng_bds/bc-alert/bc-alert.component.ts","../../../projects/ng_bds/bc-alert/bc-alert.component.html","../../../projects/ng_bds/bc-alert/bc-alert.module.ts","../../../projects/ng_bds/bc-alert/bancolombia-design-system-web-bc-alert.ts"],"sourcesContent":["import { Component, AfterViewInit, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { BcAlertBehavior } from '@bancolombia/design-system-behaviors';\nimport { BcHelperService } from '@bancolombia/design-system-web/bc-helpers';\nimport { BcDialog } from '@bancolombia/design-system-web/bc-services';\n\n/**\n * Importa las alertas con los diseños de Bancolombia S.A.\n * Las alertas corresponde a un cuadro de diálogo que disponibiliza\n * información de manera flotante o fija.\n *\n * @export\n * @class BcAlertsComponent\n * @implements {AfterViewInit}\n */\n@Component({\n  selector: 'bc-alert',\n  templateUrl: 'bc-alert.component.html',\n  styles: [],\n})\nexport class BcAlertComponent extends BcDialog implements AfterViewInit, OnInit {\n  /**\n   * Comportamiento\n   *\n   * @type {BcAlertBehavior}\n   * @memberof BcAlertsComponent\n   */\n  bcAlertBehavior: BcAlertBehavior;\n  icon = '';\n  /**\n   * Tipos de iconos\n   *\n   * @memberof BcAlertsComponent\n   */\n  icons = {\n    error: 'alert',\n    success: 'ok',\n    info: 'info',\n    warning: 'hand',\n    inactive: 'megaphone',\n  };\n  /**\n  * Título de la alerta.\n  *\n  * @memberof BcAlertsComponent\n  */\n  @Input() title = '';\n  /**\n   * Texto de la alerta.\n   *\n   * @memberof BcAlertsComponent\n   */\n  @Input() text = '';\n  /**\n * Links en la alerta, solo se pintan los 2 primeros items del arreglo.\n *\n * @memberof BcAlertsComponent\n */\n  @Input() links: Array<LinkAlert> = [];\n  /**\n   * Tipo de alerta [ \"error\" | \"success\" | \"info\" | \"warning\" | \"inactive\" ].\n   * @type {string}\n   * @memberof BcAlertsComponent\n   */\n  @Input() type: string = 'inactive';\n  /**\n   * Id del componente.\n   *\n   * @type {string}\n   * @memberof BcAlertsComponent\n   */\n  @Input() componentId: string = this.helper.getId(this);\n  /**\n   * Indica si la alerta es fija.\n   * Si la alert es fija significa que aparecerá como un cuadro de \n   * diálogo (popup) en la parte superior de la ventana; por el contrario si no\n   * lo es, aparecerá insertada en el documento.\n   *\n   * @type {boolean}\n   * @memberof BcAlertsComponent\n   */\n  fixed: boolean = true;\n  /**\n   * Tiempo de cerrado de la alerta en milisegundos.\n   * @type {number}\n   * @memberof BcAlertsComponent\n   */\n  timeOut: number = 0;\n  /**\n   * Indica si la alerta es estática o inline.\n   * Si la alert es estática significa que aparecerá como un cuadro de \n   * diálogo (popup) en la parte superior de la ventana; por el contrario si no\n   * lo es, aparecerá insertada en el documento.\n   *\n   * @type {boolean}\n   * @memberof BcAlertsComponent\n   */\n  @Input() inline: boolean = false;\n  /**\n   * Si la alerta es estática, indica si se puede descartar o cerrar.\n   *\n   * @type {boolean}\n   * @memberof BcAlertsComponent\n   */\n  @Input() dismissible: boolean = false;\n  /**\n   * Se ejecuta cuando la alerta se cierra, aplica solo para alertas inline.\n   *\n   * @type {EventEmitter<any>}\n   * @memberof BcAlertsComponent\n   */\n  @Output() onclose: EventEmitter<any> = new EventEmitter();\n  /**\n   * Indica el id del elemento de referencia para insertar la alerta\n   *\n   * @type {EventEmitter<any>}\n   * @memberof BcAlertsComponent\n   */\n  elementRef: any = '';\n\n  constructor(private helper: BcHelperService) {\n    super();\n    this.bcAlertBehavior = new BcAlertBehavior();\n  }\n\n  ngOnInit(): void {\n    this.fixed = this.inline === true || (this.elementRef && this.elementRef !== '') ? false : true;\n  }\n\n  ngAfterViewInit(): void {\n    this.bcAlertBehavior.setId(this.componentId);\n    this.bcAlertBehavior.onClose((event: any) => {\n      this.onclose.emit(event);\n    });\n    this.bcAlertBehavior.setUp();\n    setTimeout(() => {\n      this.setIconByType();\n    });\n  }\n  /**\n   * Validar icono según tipo de alerta\n   *\n   * @memberof BcAlertsComponent\n   */\n  setIconByType() {\n    this.icon = this.icons[this.type]\n      ? this.icons[this.type]\n      : this.icons.inactive;\n  }\n  /**\n   * Atributos de la alerta\n   *\n   * @param {*} inputs\n   * @memberof BcAlertsComponent\n   */\n  onInjectInputs(inputs: any): void {\n    this.componentId = inputs.id;\n    this.type = inputs.type;\n    this.title = inputs.title;\n    this.text = inputs.text;\n    this.links = inputs.links;\n    this.timeOut = inputs.timeout;\n    this.elementRef = inputs.elementRef;\n    this.closeByTimeout();\n  }\n  /**\n   * Cerrar alerta\n   *\n   * @memberof BcAlertsComponent\n   */\n  closeIt(): void {\n    let setTimeOut: number = this.inline ? 0 : 300;\n    this.bcAlertBehavior.close();\n    setTimeout(()=>{    \n      if (!this.inline) {\n        this.close('saving');\n      }}, setTimeOut);\n  }\n\n  /**\n   * Cancelar alerta\n   *\n   * @memberof BcAlertsComponent\n   */\n  cancelIt(): void {\n    this.dismiss('canceling');\n  }\n  /**\n   * Cerrar alerta según timeout\n   *\n   * @memberof BcAlertsComponent\n   */\n  closeByTimeout() {\n    if (this.timeOut && this.timeOut !== 0) {\n      this.bcAlertBehavior.setTimeOut(this.timeOut);\n      setTimeout(() => {\n        this.closeIt();\n      }, this.timeOut);\n    }\n  }\n}\n\ninterface LinkAlert {\n  url: string;\n  text: string;\n}","<article class=\"bc-alert-active bc-alert-{{ type }}\" role=\"alert\" [id]=\"componentId\" [ngClass]=\"{\n    'bc-alert-fixed': fixed,\n    'bc-alert-inline': inline,\n    'bc-alert-dismissible': dismissible}\">\n    <section class=\"bc-alert-status\">\n        <em class=\"bc-icon bc-st\">{{ icon }}</em>\n    </section>\n    <section class=\"bc-alert-body\">\n        <section class=\"bc-alert-content\">\n            <p class=\"bc-alert-title\" [innerHTML]=\"title\"></p>\n            <p class=\"bc-alert-text\" [innerHTML]=\"text\"></p>\n        </section>\n        <ul>\n            <li *ngFor=\"let l of links | slice: 0:2\">\n                <a [href]=\"l.url\" target=\"_blank\">{{ l.text }}</a>\n            </li>\n        </ul>\n    </section>\n    <section class=\"bc-my-2 bc-me-2\">\n        <button type=\"button\" class=\"bc-alert-close\" (click)=\"closeIt()\">\n            <em aria-label=\"Cerrar\" class=\"bc-icon\">error</em>\n        </button>\n    </section>\n</article>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BcAlertComponent } from './bc-alert.component';\nimport { BcButtonModule } from '@bancolombia/design-system-web/bc-button';\nimport { BcIconModule } from '@bancolombia/design-system-web/bc-icon';\nimport { BcDialogService } from '@bancolombia/design-system-web/bc-services';\n\n/**\n * Importa las alertas con los diseños de Bancolombia S.A.\n * Las alertas corresponde a un cuadro de diálogo que disponibiliza\n * información de manera flotante o fija.\n * @param text Mensaje a mostrar en la alerta\n * @param typeAlert Tipo de alerta\n *\n * @description Alerta para error\n * @example\n * <bc-alert class=\"bc-alerts-container\" text =\"Mensaje de error\" typeAlert='error'></bc-alert>\n *\n * @description Alerta para éxito\n * @example\n * <bc-alert class=\"bc-alerts-container\" text =\"Mensaje de exito\" typeAlert='success'></bc-alert>\n *\n * @description Alerta para información\n * @example\n * <bc-alert class=\"bc-alerts-container\" text =\"Mensaje de información\" typeAlert='info'></bc-alert>\n *\n * @description Alerta para advertencia\n * @example\n * <bc-alert class=\"bc-alerts-container\" text =\"Mensaje de advertencia\" typeAlert='warning'></bc-alert>\n *\n * @description Alerta para inactividad\n * @example\n * <bc-alert class=\"bc-alerts-container\" text =\"Mensaje de informativo\" typeAlert='inactive'></bc-alert>\n *\n * @author: Bancolombia S.A\n */\n\n@NgModule({\n    declarations: [BcAlertComponent],\n    imports: [BcIconModule, BcButtonModule, CommonModule,],\n    exports: [BcAlertComponent],\n    providers: [BcDialogService]\n})\nexport class BcAlertModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}