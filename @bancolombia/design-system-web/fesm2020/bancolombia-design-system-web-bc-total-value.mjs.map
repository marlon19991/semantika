{"version":3,"file":"bancolombia-design-system-web-bc-total-value.mjs","sources":["../../../projects/ng_bds/bc-total-value/bc-total-value-interfaces.ts","../../../projects/ng_bds/bc-total-value/bc-total-value.component.ts","../../../projects/ng_bds/bc-total-value/bc-total-value.component.html","../../../projects/ng_bds/bc-total-value/bc-total-value.module.ts","../../../projects/ng_bds/bc-total-value/bancolombia-design-system-web-bc-total-value.ts"],"sourcesContent":["/**\n * Interfaz del objeto para llenar componente TotalValue.\n *\n * @export\n * @interface BcTotalValueObject\n */\nexport interface BcTotalValueObject {\n  complementary?: BcTotalValueComplementary;\n  information: BcTotalValueInformation;\n}\n\n/**\n * Interfaz de una columna del componente permite agregar estilos.\n *\n * @export\n * @interface BcTotalValueColumn\n */\nexport interface BcTotalValueColumn {\n  hugContentWidth?: boolean;\n  fixedWidth?: string;\n  label: BcTotalValueLabel;\n  dataFontCssClass?: string;\n  optional: boolean;\n}\n\n/**\n * Interfaz de objeto Information, para llenar valores de totales y sus.\n *\n * @export\n * @interface BcTotalValueInformation\n */\nexport interface BcTotalValueInformation {\n  data: Array<BcTotalValueInformationData>;\n  informationLabelFontCssClass?: string;\n}\n\n/**\n * Interfaz para especificar los totales del componente.\n *\n * @export\n * @interface BcTotalValueInformationData\n */\nexport interface BcTotalValueInformationData extends BcTotalValueColumn {\n  data: BcTotalValueAmount;\n}\n\n/**\n * Interfaz para especificar la informacion complementaria y su estilo fuente\n *\n * @export\n * @interface BcTotalValueComplementary\n */\nexport interface BcTotalValueComplementary extends BcTotalValueColumn {\n  labelFontCssClass?: string;\n  data: string;\n}\n\n/**\n * Interfaz para especificar labels y texto de tooltips\n *\n * @export\n * @interface BcTotalValueLabel\n */\nexport interface BcTotalValueLabel {\n  text: string;\n  tooltipText?: string;\n}\n\n/**\n * Interfaz para especificar monto: moneda, valor, valor decimal\n *\n * @export\n * @interface BcTotalValueAmount\n */\nexport interface BcTotalValueAmount {\n  currency: string;\n  integer: string;\n  decimal?: string;\n}\n\n/**\n * Enumerable para fondos del componte\n *\n * @export\n * @interface BcTotalValueBackgroundColor\n */\nexport enum BcTotalValueBackgroundColor {\n  BG_BRAND_PRIMARY_PAIR_01_00 = 'bc-bg-brand-primary-pair-01-00',\n  BG_BRAND_N_PAIR_50_900 = 'bc-bg-brand-N-P-pair-50-900',\n}\n\n/**\n * Enumerable para espacios entre columnas\n *\n * @export\n * @interface BcTotalValueCellSpacingGap\n */\nexport enum BcTotalValueCellSpacingGap {\n  GAP_01 = 'bc-total-value-gap-01',\n  GAP_02 = 'bc-total-value-gap-02',\n  GAP_03 = 'bc-total-value-gap-03',\n  GAP_04 = 'bc-total-value-gap-04',\n}\n","import { Component, Input, AfterViewInit, ElementRef } from '@angular/core';\nimport { BcHelperService } from '@bancolombia/design-system-web/bc-helpers';\nimport {\n  BcTotalValueObject,\n  BcTotalValueColumn,\n  BcTotalValueCellSpacingGap,\n  BcTotalValueBackgroundColor,\n} from './bc-total-value-interfaces';\nimport { BcTotalValueBehavior } from '@bancolombia/design-system-behaviors';\n\n/**\n * Componente TotalValue\n * import { BcTotalValueComponent } from '@bancolombia/design-system-web/bc-total-value';\n * @export\n * @class BcTotalValueComponent\n */\n@Component({\n  selector: 'tr[bc-total-value]',\n  templateUrl: './bc-total-value.component.html',\n})\nexport class BcTotalValueComponent implements AfterViewInit {\n  bcTotalValueBehavior: BcTotalValueBehavior;\n  containerClasses: { data: string; class: string }[] = [];\n  columns: number = 0;\n  element: ElementRef;\n  bcTotalValue: BcTotalValueObject;\n  _backgroundColor: string;\n  _dividerBottom: boolean;\n  _cellSpacingGap: BcTotalValueCellSpacingGap;\n\n  /**\n   * Id del elemento.\n   *\n   * @type {string}\n   * @memberof BcTotalValueComponent\n   */\n  @Input() componentId: string = this.bcHelperService.getId(this);\n\n  /**\n   * Todas las columnas con el mismo ancho\n   *\n   * @type {boolean}\n   * @memberof BcTotalValueComponent\n   */\n  @Input() allCellsSameWidth: boolean = true;\n\n  /**\n   * Background del componente\n   *\n   * @type {BcTotalValueBackgroundColor}\n   * @memberof BcTotalValueComponent\n   */\n  @Input() set backgroundColor(backgroundColor: BcTotalValueBackgroundColor) {\n    this._backgroundColor = backgroundColor;\n    this.setClasses('backgroundColor', backgroundColor);\n  }\n\n  /**\n   * Mostrar divider inferior\n   *\n   * @type {boolean}\n   * @memberof BcTotalValueComponent\n   */\n  @Input() set dividerBottom(dividerBottom: boolean) {\n    this._dividerBottom = dividerBottom;\n    const divider = dividerBottom ? 'bc-total-value-container-divider-bottom' : '';\n    this.setClasses('dividerBottom', divider);\n  }\n\n  /**\n   * Espacios entre columnas\n   *\n   * @type {BcTotalValueCellSpacingGap}\n   * @memberof BcTotalValueComponent\n   */\n  @Input()\n  set cellSpacingGap(cellSpacingGap: BcTotalValueCellSpacingGap) {\n    this._cellSpacingGap = cellSpacingGap;\n    this.setClasses('cellSpacingGap', cellSpacingGap);\n  }\n\n  /**\n   * Objeto para cargar informacion y formato de columnas del componente\n   *\n   * @type {BcTotalValueObject}\n   * @memberof BcTotalValueComponent\n   */\n  @Input() set bcTotalValueObject(data: BcTotalValueObject) {\n    this.bcTotalValue = data;\n    this.columns = this.bcTotalValue.information.data.length - 1;\n  }\n\n  constructor(private bcHelperService: BcHelperService, el: ElementRef) {\n    this.element = el;\n    this.bcTotalValueBehavior = new BcTotalValueBehavior();\n  }\n\n  ngAfterViewInit(): void {\n    this.setClasses('container', 'bc-total-value-container');\n    this.setClasses('cellSpacingGap', this._cellSpacingGap ? this._cellSpacingGap : BcTotalValueCellSpacingGap.GAP_03);\n    this.element.nativeElement.setAttribute('id', this.componentId);\n    this.bcTotalValueBehavior.setId(this.componentId);\n    this.bcTotalValueBehavior.setUp();\n  }\n\n  /**\n   * Obtiene el string con las clases css para la columna del componente\n   *\n   * @param {number} index\n   * @returns {string}\n   * @memberof BcTotalValueComponent\n   */\n  getColWidthClass(index: number): string {\n    const containerClasses: string[] = [];\n    if (this.allCellsSameWidth) {\n      const columns = +!!this.bcTotalValue.complementary + this.bcTotalValue.information.data.length;\n      containerClasses.push(`bc-total-value-${columns}-col-width`);\n    }\n\n    if (!this.bcTotalValue.information.data[index].optional) {\n      containerClasses.push('bc-total-value-cell-information-primary');\n    }\n    return containerClasses.join(' ');\n  }\n\n  /**\n   * Obtiene el style width para la columna del componente\n   *\n   * @param {BcTotalValueColumn} column\n   * @returns { width: string }\n   * @memberof BcTotalValueComponent\n   */\n  getColWidthStyle(column: BcTotalValueColumn): { width: string } {\n    let style: string = '';\n    if (column.fixedWidth) {\n      style = column.fixedWidth;\n    } else if (column.hugContentWidth) {\n      style = 'fit-content';\n    }\n    return { width: style };\n  }\n\n  /**\n   * Agrega clases css para la columna del componente\n   *\n   * @param {string} data\n   * @param {string} newClass\n   * @memberof BcTotalValueComponent\n   */\n  private setClasses(data: string, newClass: string): void {\n    const existingClass = this.containerClasses.find((item) => item.data === data);\n    if (existingClass) {\n      existingClass.class = newClass;\n    } else {\n      this.containerClasses.push({ data, class: newClass });\n    }\n    const classes = this.containerClasses.map((item) => item.class);\n    this.element.nativeElement.setAttribute('class', classes.join(' '));\n  }\n}\n","<td\n  class=\"bc-total-value bc-total-value-cell-complementary bc-total-value-5-col-width\"\n  *ngIf=\"bcTotalValue?.complementary\"\n  [ngClass]=\"{\n    'bc-total-value-cell-complementary-primary':\n      !bcTotalValue?.complementary.optional\n  }\"\n  [ngStyle]=\"getColWidthStyle(bcTotalValue?.complementary)\"\n>\n  <div class=\"bc-total-value-complementary-label\">\n    <span\n      class=\"bc-total-value-ellipsis\"\n      [ngClass]=\"\n        bcTotalValue?.complementary?.labelFontCssClass ||\n        'bc-total-value-complementary-label-font'\n      \"\n    >\n      {{ bcTotalValue?.complementary?.label.text }}\n    </span>\n    <bc-icon\n      *ngIf=\"bcTotalValue?.complementary?.label.tooltipText as tooltipText\"\n      size=\"sm\"\n      class=\"bc-icon bc-tooltip\"\n      bc-tooltip\n      [bcTooltipPosition]=\"'top'\"\n      [bcTooltipText]=\"tooltipText\"\n    >\n      info\n    </bc-icon>\n  </div>\n  <p\n    [ngClass]=\"\n      bcTotalValue?.complementary?.dataFontCssClass ||\n      'bc-total-value-complementary-data'\n    \"\n  >\n    {{ bcTotalValue?.complementary?.data }}\n  </p>\n</td>\n<td\n  class=\"bc-total-value bc-total-value-cell-information\"\n  *ngFor=\"let info of bcTotalValue.information.data; let i = index\"\n  [ngClass]=\"getColWidthClass(i)\"\n  [ngStyle]=\"getColWidthStyle(info)\"\n>\n  <div class=\"bc-total-value-information-label\">\n    <span\n      class=\"bc-total-value-ellipsis\"\n      [ngClass]=\"\n        bcTotalValue.information.informationLabelFontCssClass ||\n        'bc-total-value-information-label-font'\n      \"\n    >\n      {{ info.label.text }}\n    </span>\n    <bc-icon\n      *ngIf=\"info.label.tooltipText as tooltipText\"\n      size=\"sm\"\n      class=\"bc-icon bc-tooltip\"\n      bc-tooltip\n      [bcTooltipPosition]=\"'top'\"\n      [bcTooltipText]=\"tooltipText\"\n    >\n      info\n    </bc-icon>\n  </div>\n  <p\n    class=\"bc-total-value-information-data\"\n    [ngClass]=\"info.dataFontCssClass || 'bc-total-value-information-data-font'\"\n  >\n    {{ info.data.currency }} {{ info.data.integer }}<span\n      class=\"bc-total-value-information-data-decimal\"\n      *ngIf=\"info.data.decimal\"\n    >{{ info.data.decimal }}</span>\n  </p>\n</td>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BcTotalValueComponent } from './bc-total-value.component';\nimport { BcIconModule } from '@bancolombia/design-system-web/bc-icon';\nimport { BcTooltipModule } from '@bancolombia/design-system-web/bc-tooltip';\n\n@NgModule({\n  declarations: [BcTotalValueComponent],\n  imports: [CommonModule, BcIconModule, BcTooltipModule],\n  exports: [BcTotalValueComponent]\n})\nexport class BcTotalValueModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}