version: '3.8'

services:
  postgres:
    image: pgvector/pgvector:pg16
    container_name: semantika-postgres
    environment:
      POSTGRES_DB: semantikadb
      POSTGRES_USER: semantika
      POSTGRES_PASSWORD: semantika
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
    networks:
      - semantika-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U semantika -d semantikadb"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7.2-alpine
    container_name: semantika-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - semantika-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped
    command: redis-server --appendonly yes

  adminer:
    image: adminer:4.8.1
    container_name: semantika-adminer
    ports:
      - "8080:8080"
    networks:
      - semantika-network
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  semantika-network:
    driver: bridge
    name: semantika-network 