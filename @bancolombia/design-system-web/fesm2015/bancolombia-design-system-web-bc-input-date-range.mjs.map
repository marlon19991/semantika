{"version":3,"file":"bancolombia-design-system-web-bc-input-date-range.mjs","sources":["../../../projects/ng_bds/bc-input-date-range/bc-input-date-range.component.ts","../../../projects/ng_bds/bc-input-date-range/bc-input-date-range.component.html","../../../projects/ng_bds/bc-input-date-range/bc-input-date-range.module.ts","../../../projects/ng_bds/bc-input-date-range/bancolombia-design-system-web-bc-input-date-range.ts"],"sourcesContent":["import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Optional,\n  Output,\n  Renderer2,\n  Self,\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { BcInputDateRangeBehavior, INPUT_ERROR } from '@bancolombia/design-system-behaviors';\nimport { BcHelperService, BcGeneralInputComponent } from '@bancolombia/design-system-web/bc-helpers';\n@Component({\n  selector: 'bc-input-date-range',\n  templateUrl: './bc-input-date-range.component.html',\n})\nexport class BcInputDateRangeComponent extends BcGeneralInputComponent implements OnInit, AfterViewInit {\n  /**\n   * elemento que hace referencia al behavior del InputDateRange\n   *\n   * @memberof BcInputDateRangeComponent\n   */\n  element;\n  /**\n   * Id del componente.\n   *\n   * @memberof BcInputDateRangeComponent\n   */\n  @Input() componentId = this.bcHelperService.getId(this);\n  /**\n   * Esta entrada es un string que contiene un  arreglo que nos indica el rango de días, meses o años para el calendario.\n   * @type {string}\n   * @memberof BcInputDateRangeComponent\n   */\n  @Input() fastButtons: string = \"[]\";\n  /**\n   * Atributo rango de fechas.\n   *\n   * @type {[]}\n   * @memberof BcInputDateRangeComponent\n   */\n  @Input() rangesText: [] = [];\n  /**\n   * Esta entrada de tipo string nos indica la fecha minima seleccionable del calendario.\n   *\n   * @type {string}\n   * @memberof BcInputDateRangeComponent\n   */\n  @Input() minDate: string;\n  /**\n   * Esta entrada de tipo string nos indica la fecha maxima seleccionable del calendario.\n   *\n   * @type {string}\n   * @memberof BcInputDateRangeComponent\n   */\n  @Input() maxDate: string;\n  /**\n   * Esta entrada de tipo string nos indica el tipo de calendario, puede ser simple o puede ser de tipo split.\n   *\n   * @type {string}\n   * @memberof BcInputDateRangeComponent\n   */\n  @Input() CalendarHoliday: string;\n  /**\n   * Activa las validaciones automaticas de rangos y errores de escritura\n   *\n   * @type {string}\n   * @memberof BcInputDateRangeComponent\n   */\n  @Input() validatesInput: string;\n  /**\n   * Mensaje de error para el primer input\n   *\n   * @type {string}\n   * @memberof BcInputDateRangeComponent\n   */\n  @Input() errorText: string;\n  /**\n   * Mensaje de error para el segundo input\n   *\n   * @type {string}\n   * @memberof BcInputDateRangeComponent\n   */\n  @Input() errorTextTwo: string;\n  /**\n   * Mensaje success para el primer input\n   *\n   * @type {string}\n   * @memberof BcInputDateRangeComponent\n   */\n  @Input() successText: string;\n  /**\n   * Deshabilita el scroll del calendario dentro del componente\n   *\n   * @type {boolean}\n   * @memberof BcInputDateRangeComponent\n   */\n  @Input() disabledScroll: boolean;\n  /**\n   * Lenguaje actual del componente\n   *\n   * @type {boolean}\n   * @memberof BcInputDateRangeComponent\n   */\n  @Input() language: string;\n\n  /**\n   * Esta entrada de tipo string define los dias festivos del calendario\n   *\n   * @type {{ month: number, day: number }[]}\n   * @memberof BcInputDateRangeComponent\n   */\n  @Input() holidayDates: { month: number, day: number }[] = [];\n\n  /**\n   * Mensaje success para el segundo input\n   *\n   * @type {string}\n   * @memberof BcInputDateRangeComponent\n   */\n  @Input() successTextTwo: string;\n  /**\n   * Devuelve las fechas seleccionadas (inicio/fin)\n   *\n   * @memberof BcInputDateRangeComponent\n   */\n  @Output() updateValue = new EventEmitter<number>();\n  constructor(\n    @Self() @Optional() public controlDirective: NgControl,\n    private bcHelperService: BcHelperService,\n    private renderer: Renderer2,\n    private elmRef: ElementRef\n  ) {\n    super();\n    this.element = new BcInputDateRangeBehavior();\n    this.element.output = (value: any) => {\n      this.dispatchValue(value);\n    };\n    if (controlDirective) {\n      controlDirective.valueAccessor = this as BcGeneralInputComponent;\n    }\n  }\n  ngOnInit() { }\n  /**\n   * Configura el behavior del input-date-range\n   *\n   * @memberof BcInputDateRangeComponent\n   */\n  ngAfterViewInit() {\n    this.element.setId(this.componentId);\n    this.element.setUp();\n    this.validateErrorState();\n  }\n  /**\n   * Valida si los inpust tienen el estado error\n   *\n   * @memberof BcInputDateRangeComponent\n   */\n  validateErrorState() {\n    const inputs = this.elmRef.nativeElement.querySelectorAll('input');\n    if (this.controlDirective && this.controlDirective.statusChanges) {\n      this.controlDirective.statusChanges.subscribe((element) => {\n        if (inputs) {\n          inputs.forEach((input) => {\n            if (element === 'INVALID') {\n              this.renderer.addClass(input, INPUT_ERROR);\n            } else {\n              this.renderer.removeClass(input, INPUT_ERROR);\n            }\n          });\n        }\n      });\n    }\n  }\n  /**\n   * Obtiene el valor output del componente para emitir los cambios\n   *\n   * @memberof BcInputDateRangeComponent\n   */\n  dispatchValue(value: any): void {\n    this.onInput(value);\n    this.updateValue.emit(this.value);\n  }\n  /**\n   * Actualiza el value del componente y sus cambios\n   *\n   * @memberof BcInputDateRangeComponent\n   */\n  onInput(value: any): void {\n    this.value = value;\n    this.onTouch();\n    this.onChange(this.value);\n  }\n\n  /**\n   * Realiza actualizacion de los inputs\n   *\n   * @memberof BcInputDateRangeComponent\n   */\n  writeValue(value) {\n    if (value) {\n      if (value.initialDate && value.toDate) {\n        if (this.element.inputDate && this.element.inputDateTwo) {\n          this.element.setValues(value.initialDate, value.toDate);\n        }\n      } else if (!value.initialDate && !value.toDate) {\n        this.cleanInputsValue();\n      }\n    } else {\n      if (this.element.inputDate && this.element.inputDateTwo) {\n        this.cleanInputsValue();\n      }\n    }\n  }\n\n  /**\n   * Limpia y actualiza los estados activos de los input\n   *\n   * @memberof BcInputDateRangeComponent\n   */\n  cleanInputsValue() {\n    this.element.inputDate.value = '';\n    this.element.inputDateTwo.value = '';\n    (this.element.inputDate as HTMLInputElement).classList.remove('bc-active');\n    (this.element.inputDateTwo as HTMLInputElement).classList.remove('bc-active');\n    this.defaultClassActive();\n    this.defaultClassActiveTwo();\n  }\n\n  /**\n   * Actualiza el estado disabled a el componente\n   *\n   * @memberof BcInputDateRangeComponent\n   */\n  setDisabledState(isDisabled: boolean) {\n    if (this.element.inputDate && this.element.inputDateTwo) {\n      this.element.setDisabled(isDisabled);\n    }\n  }\n  /**\n   * Actualiza la clase a success del inputDate\n   *\n   * @memberof BcInputDateRangeComponent\n   */\n  successClassActive() {\n    this.element.successInputUpdateClass();\n  }\n  /**\n   * Actualiza la clase a success del inputDateTwo\n   *\n   * @memberof BcInputDateRangeComponent\n   */\n  successClassActiveTwo() {\n    this.element.successInputTwoUpdateClass();\n  }\n  /**\n   * Actualiza la clase a error del inputDate\n   *\n   * @memberof BcInputDateRangeComponent\n   */\n  errorClassActive() {\n    this.element.errorInputUpdateClass();\n  }\n  /**\n   * Actualiza la clase a error del inputDateTwo\n   *\n   * @memberof BcInputDateRangeComponent\n   */\n  errorClassActiveTwo() {\n    this.element.errorInputTwoUpdateClass();\n  }\n  /**\n   * Actualiza el estado default del inputDate\n   *\n   * @memberof BcInputDateRangeComponent\n   */\n  defaultClassActive() {\n    this.element.setDefaultStatusInputClass();\n  }\n  /**\n   * Actualiza el estado default del inputDateTwo\n   *\n   * @memberof BcInputDateRangeComponent\n   */\n  defaultClassActiveTwo() {\n    this.element.setDefaultStatusInputTwoClass();\n  }\n  /**\n   * Cierra el calendario del InputDateRange\n   *\n   * @memberof BcInputDateRangeComponent\n   */\n  closeDropdown() {\n    this.element.closeDropdown();\n  }\n}\n","<div [id]=componentId class=\"bc-input-date-range\" [attr.fastButtons]=\"fastButtons\" [attr.rangesText]=\"rangesText\"\n  [attr.min]=\"minDate\" [attr.max]=\"maxDate\" [attr.successText]=\"successText\" [attr.successTextTwo]=\"successTextTwo\"\n  [attr.errorTextTwo]=\"errorTextTwo\" [attr.errorText]=\"errorText\" [attr.holidayDates]=\"holidayDates\"\n  [attr.validateInputs]=\"validatesInput\" [attr.disabledScroll]=\"disabledScroll\" [attr.language]=\"language\">\n  <ng-content></ng-content>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BcInputDateRangeComponent } from './bc-input-date-range.component';\nimport { BcInputModule } from '@bancolombia/design-system-web/bc-input';\n\n/**\n * Importa el componente bcInputDate con\n * los diseños de Bancolombia S.A.\n *\n * @componente <bc-input-date-range></bc-input-file-range>\n * @param {number[]} fastButtons: botones de accion rapida para los rangos dl calendario\n * @param componentId: string de id de html\n * IMPORTANTE: Este componente debe tener 2 input en su interior\n *\n *\n * @author: Bancolombia S.A\n */\n\n@NgModule({\n  declarations: [BcInputDateRangeComponent],\n  imports: [CommonModule, BcInputModule],\n  exports: [BcInputDateRangeComponent],\n})\nexport class BcInputDateRangeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}