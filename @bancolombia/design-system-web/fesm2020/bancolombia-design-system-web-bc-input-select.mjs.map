{"version":3,"file":"bancolombia-design-system-web-bc-input-select.mjs","sources":["../../../projects/ng_bds/bc-input-select/bc-input-select.component.ts","../../../projects/ng_bds/bc-input-select/bc-input-select.component.html","../../../projects/ng_bds/bc-input-select/bc-input-select.module.ts","../../../projects/ng_bds/bc-input-select/bancolombia-design-system-web-bc-input-select.ts"],"sourcesContent":["import {\n  Component,\n  Input,\n  EventEmitter,\n  Output,\n  AfterViewInit,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectorRef,\n  ViewChild,\n  Renderer2,\n  ElementRef,\n  Optional,\n  Self,\n} from '@angular/core';\nimport { BcInputSelectBehavior } from '@bancolombia/design-system-behaviors';\nimport { BcHelperService, BcGeneralInputComponent } from '@bancolombia/design-system-web/bc-helpers';\nimport { NgControl } from '@angular/forms';\n\n/**\n * componente Select\n *\n * @export\n * @class BcInputSelectComponent\n * @implements {OnInit}\n * @implements {AfterViewInit}\n * @implements {OnChanges}\n */\n@Component({\n  selector: 'bc-input-select',\n  templateUrl: 'bc-input-select.component.html',\n})\nexport class BcInputSelectComponent extends BcGeneralInputComponent implements AfterViewInit, OnChanges {\n  /**\n   * Esta entrada permite indicar un id único al componente dentro del DOM.\n   *\n   * @type {string}\n   * @memberof BcInputSelectComponent\n   */\n  @Input() componentId: string = this.bcHelperService.getId(this);\n  /**\n   * Esta entrada de tipo string nos permite indicarle al selector un label descriptivo.\n   *\n   * @type {string}\n   * @memberof BcInputSelectComponent\n   */\n  @Input() label;\n\n  /**\n   * name del elemento\n   *\n   * @memberof BcInputSelectComponent\n   */\n  @Input() name: string;\n\n  /**\n   * Esta entrada de tipo string nos permite añadirle al selector un span.\n   *\n   * @type {string}\n   * @memberof BcInputSelectComponent\n   */\n  @Input() span;\n  /**\n   * Esta entrada es el arreglo de configuración de nuestro componente\n   *\n   * @type {Array<{ text: string }>}\n   * @memberof BcInputSelectComponent\n   */\n\n  /**\n   * Esta entrada nos permite setear el valor inicial de nuestro componente.\n   *\n   * @memberof BcInputSelectComponent\n   */\n  @Input() initValue;\n\n  /**\n   * Esta entrada nos asignar el valor del selector.\n   *\n   * @memberof BcInputSelectComponent\n   */\n\n  @Input() values: Array<{ label: string; value: any; icon?: string }>;\n\n  /**\n   * Esta entrada de tipo string nos permite activar el ícono dentro de nuestras opciones, es importante\n   * tener en cuenta que la entrada recibe el nombre del ícono.\n   *\n   * @type {string}\n   * @memberof BcInputSelectComponent\n   */\n  @Input() icon: string;\n  /**\n   * Esta entrada de tipo numérico nos indica el índice de la opción por defecto.\n   *\n   * @type {number}\n   * @memberof BcInputSelectComponent\n   */\n  @Input() defaultIndex: number;\n\n  /**\n   * Esta entrada de tipo booleana nos permite indicar si el componente está en estado de error.\n   *\n   * @type {boolean}\n   * @memberof BcInputSelectComponent\n   */\n  @Input() status: 'error' | 'disabled'| 'enabled'='enabled';\n\n  /**\n   * Esta entrada de tipo booleana nos indica si el componente es de entrada múltiple.\n   *\n   * @type {boolean}\n   * @memberof BcInputSelectComponent\n   */\n  @Input() multiple = false;\n\n  /**\n   * Esta entrada de tipo booleana nos indica si el componente filtra la lista de opciones.\n   *\n   * @type {boolean}\n   * @memberOf BcInputSelectComponent\n   */\n  @Input() filter = false;\n\n  /**\n   * Salida del valor actual del componente.\n   *\n   * @type {(EventEmitter<string | string[]>)}\n   * @memberof BcInputSelectComponent\n   */\n  @Output() valueOutput: EventEmitter<string | string[]> = new EventEmitter<string | string[]>();\n\n  /**\n   * Esta entrada de tipo string nos indica el tipo de formato de salida de nuestro valor actual, esta puede ser\n   * de tipo full para devolver el objeto completo o simple para devolver un único valor.\n   *\n   * @type {('full' | 'simple')}\n   * @memberof BcInputSelectComponent\n   */\n  @Input() formatType: 'full' | 'simple' = 'simple';\n\n  codesbcInputSelect: any;\n  bcInputSelectBehavior: any;\n  formControlName: any;\n\n  @Input('selected-items-display') selectedItemsDisplay;\n\n   /**\n   * Altura maxima del contenido\n   *\n   * @memberof BcInputDateRangeComponent\n   */\n    @Input() maxHeightContent : number;\n\n  config = {\n    firstLoad: true,\n  };\n\n  @ViewChild('container') container: ElementRef;\n  @ViewChild('input') input: ElementRef;\n  constructor(\n    @Self() @Optional() public controlDirective: NgControl,\n    private bcHelperService: BcHelperService,\n    private renderer: Renderer2,\n    private changeDetectorRef: ChangeDetectorRef,\n  ) {\n    super();\n    this.bcInputSelectBehavior = new BcInputSelectBehavior();\n    if(this.maxHeightContent){\n      this.bcInputSelectBehavior.maxHeightContent = this.maxHeightContent;\n    }\n    if (controlDirective) {\n      controlDirective.valueAccessor = this as BcGeneralInputComponent;\n    }\n  }\n\n\n  onTouch = () => {\n    this.changeDetectorRef.detectChanges();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes && !this.config.firstLoad) {\n      if (changes.values) {\n        this.changeDetectorRef.detectChanges();\n        this.setInputs();\n        if (this.defaultIndex) {\n          this.bcInputSelectBehavior.setDefaultIndex(this.defaultIndex);\n        }\n        if (this.value) {\n          this.bcInputSelectBehavior.setDefaultValue(this.value)\n        }\n\n        this.bcInputSelectBehavior.setUp(true);\n        this.bcInputSelectBehavior.setDefaultValue(this.value);\n      }\n      if (changes.status) {\n        this.updateState();\n      }\n      if (changes.multiple) {\n        this.setMultipleState();\n      }\n    }\n  }\n\n  ngAfterViewInit() {\n    this.config.firstLoad = false;\n    setTimeout(()=>{\n      this.setInputs();\n      this.updateState();\n      this.setMultipleState();\n      this.setFilterState();\n      this.bcInputSelectBehavior.setUp();\n      this.bcInputSelectBehavior.setDefaultValue(this.value);\n      this.validateErrorStatus();\n      this.input.nativeElement.addEventListener('blur', this.onBlur.bind(this))\n      this.writeValue(this.value)\n    })\n  }\n\n  onBlur(ev: Event) {\n    this.onTouch();\n    this.onChange(this.value)\n  }\n\n  validateErrorStatus() {\n    if (this.controlDirective && this.controlDirective.statusChanges) {\n      this.controlDirective.statusChanges.subscribe((element) => {\n        if (element === 'INVALID') {\n          this.renderer.addClass(this.input.nativeElement, 'bc-input-error');\n        } else {\n          this.renderer.removeClass(this.input.nativeElement, 'bc-input-error');\n        }\n      });\n    }\n  }\n\n  updateState() {\n    if (this.status === 'error') {\n      this.renderer.addClass(this.input.nativeElement, 'bc-input-error');\n    } else if (this.status === 'disabled') {\n      this.renderer.setAttribute(this.container.nativeElement, this.status, '');\n    } else {\n      this.renderer.removeAttribute(this.container.nativeElement, 'disabled');\n      this.renderer.removeClass(this.input.nativeElement, 'bc-input-error');\n      this.renderer.addClass(this.input.nativeElement, 'bc-input');\n    }\n  }\n\n  writeValue(value: any): void {\n    if (value == null || typeof value == 'undefined') {\n      this.bcInputSelectBehavior.setInputValue(value);\n      this.bcInputSelectBehavior.deleteActiveIcon();\n      return;\n    }\n    this.value = value;\n\n    const markItem = (val) => {\n      if (this.values) {\n        const index = this.values.map((item) => item.value).indexOf(val);\n        if (index >= 0) {\n          this.bcInputSelectBehavior.markItemByIndex(index);\n        }\n      }\n    };\n    if (this.multiple) {\n      Array.from(value).forEach(markItem);\n    } else {\n      markItem(value);\n    }\n  }\n\n  setMultipleState(): void {\n    if (this.multiple) {\n      this.renderer.setAttribute(this.container.nativeElement, 'multiple', '');\n    } else {\n      this.renderer.removeAttribute(this.container.nativeElement, 'multiple');\n    }\n  }\n\n  setFilterState(): void {\n    if (this.filter) {\n      this.renderer.setAttribute(this.container.nativeElement, 'filter', '');\n    } else {\n      this.renderer.removeAttribute(this.container.nativeElement, 'filter');\n    }\n  }\n\n  /**\n   * setea los input\n   *\n   * @memberof BcInputSelectComponent\n   */\n  setInputs() {\n    this.bcInputSelectBehavior.setId(this.componentId);\n    this.bcInputSelectBehavior.setDefaultIndex(this.defaultIndex);\n    this.bcInputSelectBehavior.outputFunction = (param) => this.setvalueOutput(param);\n    this.bcInputSelectBehavior.setItems(this.values);\n    if (this.formatType) {\n      this.bcInputSelectBehavior.setFormatOutput(this.formatType);\n    }\n    if (this.selectedItemsDisplay) {\n      this.bcInputSelectBehavior.setSelectedItemsDisplay(this.selectedItemsDisplay);\n    }\n\n  }\n\n  /**\n   * valores a salir\n   *\n   * @param {(string | string[])} param\n   * @memberof BcInputSelectComponent\n   */\n  setvalueOutput(param: string | string[]) {\n    this.value = param;\n    this.onTouch();\n    this.setMultipleState();\n    this.setFilterState();\n    this.onChange(this.value);\n    this.valueOutput.emit(param);\n  }\n\n  /**\n   * Habilitar y deshabilitar dropdown\n   *\n   * @param {(boolean)} param\n   * @memberof BcInputSelectComponent\n   */\n  setDisabledState(isDisabled: boolean) {\n    this.bcInputSelectBehavior.setDisabled(isDisabled);\n  }\n\n  cleanSearch() {\n    this.bcInputSelectBehavior.cleanSearchBehavior();\n  }\n}\n","<div class=\"bc-input-select\" #container [id]=\"componentId\">\n    <em *ngIf=\"icon\">{{ icon }}</em>\n    <input #input type=\"text\" [name]=name class=\"bc-input\" [id]=\"componentId+'-input'\"/>\n    <em class=\"bc-input-select-toggle\" [attr.aria-controls]=\"componentId+'-container'\">arrow2-down</em>\n    <label *ngIf=\"label\" [for]=\"componentId+'-input'\">{{ label }}</label>\n    <span *ngIf=\"span\"> {{ span }}</span>\n    <ul class=\"bc-input-select-content\" [id]=\"componentId+'-container'\">\n    </ul>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BcInputSelectComponent } from './bc-input-select.component';\nimport { CommonModule } from '@angular/common';\nimport { BcCheckboxModule } from '@bancolombia/design-system-web/bc-checkbox';\nimport { BcIconModule } from '@bancolombia/design-system-web/bc-icon';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n/**\n * Importa el componente BcInputSelect con\n * los diseños de Bancolombia S.A.\n *\n * @componente <bc-input-select></bc-input-select>\n *\n * @param  [iconLeft](opcional): Texto que indica el id del componente\n * @param  [placeholder](opcional): Texto que indica el placeholder del select\n * @param  [textBelow](opcional): Texto que aparece en la parte de abajo del select\n * @param  values: Array tipo [{ text: string }] que indica los valores del select\n * @param [iconLeft](opcional): Boolean que indica si el select tiene iconos a la izquierda.\n * Si tiene se deben de enviar [{ text: string, icon: string }]\n * @param [valueInput](opcional): Array tipo [{ text: string }] y si es isMultipleChk true.\n * Si no debe de ser el valueinput texto\n * @param [isError](opcional): Boolean que indica si tiene estilo error el select o no. por defecto falso\n * @param [isDisabled](opcional): Boolean que indica si tiene estilo disabled el select o no. por defecto falso\n * @param  [isMultipleChk](opcional): Boolean que indica si tiene checkbox de seleccion multiple\n * @param  valueOutput: Output Valor de salida que indica los valores seleccionados\n *\n * @example\n *\n * <bc-input-select\n * [id] = \"'bc-select1'\"\n * [values]=\"objSelect.values\"\n * [placeholder]=\"objSelect.placeholder\"\n * [textBelow]=\"objSelect.textBelow\"\n * (valueOutput) = \"showSelectedValue($event)\"\n * ></bc-input-select>\n *\n * @author: Bancolombia S.A\n */\n\n@NgModule({\n  declarations: [BcInputSelectComponent],\n  imports: [CommonModule, BcCheckboxModule, BcIconModule, ReactiveFormsModule, FormsModule],\n  exports: [BcInputSelectComponent],\n})\nexport class BcInputSelectModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}