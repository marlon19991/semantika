{"version":3,"file":"bancolombia-design-system-web-bc-accordion.mjs","sources":["../../../projects/ng_bds/bc-accordion/bc-accordion-header/bc-accordion-header.component.ts","../../../projects/ng_bds/bc-accordion/bc-accordion-header/bc-accordion-header.component.html","../../../projects/ng_bds/bc-accordion/bc-accordion-group.component.ts","../../../projects/ng_bds/bc-accordion/bc-accordion-group.component.html","../../../projects/ng_bds/bc-accordion/bc-accordion/bc-accordion.component.ts","../../../projects/ng_bds/bc-accordion/bc-accordion/bc-accordion.component.html","../../../projects/ng_bds/bc-accordion/bc-accordion-content/bc-accordion-content-dir.directive.ts","../../../projects/ng_bds/bc-accordion/bc-accordion-content/bc-accordion-content.component.ts","../../../projects/ng_bds/bc-accordion/bc-accordion-content/bc-accordion-content.component.html","../../../projects/ng_bds/bc-accordion/bc-accordion.module.ts","../../../projects/ng_bds/bc-accordion/bancolombia-design-system-web-bc-accordion.ts"],"sourcesContent":["import { Component, Input, Output, EventEmitter, ElementRef, OnChanges, Renderer2, OnInit } from '@angular/core';\nimport { AccordionColumn } from '../bc-accordion-interfaces';\nimport { BcHelperService } from '@bancolombia/design-system-web/bc-helpers';\n\ninterface ItooltipIcon {\n  isTooltip: boolean;\n  textTooltip: string;\n  positionTooltip: string;\n}\n\n/**\n * Importa el acordeón para contener info\n * El acordeón colapsa desde un contenedor principal para de esta manera\n * mostrar información interna que haya dentro del mismo el cual se expande o se contrae al realizar clic.\n *\n * @export\n * @class BcAccordionHeaderComponent\n */\n@Component({\n  selector: 'bc-accordion-header',\n  templateUrl: './bc-accordion-header.component.html'\n})\nexport class BcAccordionHeaderComponent implements OnChanges, OnInit {\n  /**\n   * Esta entrada permite indicar un id único al componente dentro del DOM.\n   *\n   * @type {string}\n   * @memberof BcInputSelectComponent\n   */\n  @Input() componentId: string = this.bcHelperService.getId(this);\n\n  /**\n   * Esta Variable se utiliza para guardar el ultimo elemento de las\n   * columnas, este aplica solo para el acordeon con columnas y se usa en\n   * responsive\n   * @type {string}\n   */\n\n  lastValueColumn: string = '';\n\n  /**\n   * Título principal, es obligatorio y puede tener cualquier valor string.\n   *\n   * @type {string}\n   * @memberof BcAccordionHeaderComponent\n   */\n  @Input() title = 'Título sección';\n  /**\n   * Subtítulo, es opcional y puede tener cualquier valor string.\n   *\n   * @type {string}\n   * @memberof BcAccordionHeaderComponent\n   */\n  @Input() subtitle = '';\n  /**\n   * Icono a la izquierda, es de tipo funcional y va al lado izquierdo la acordeón.\n   *\n   * @type {string}\n   * @memberof BcAccordionHeaderComponent\n   */\n  @Input() leftIcon = '';\n  /**\n   * Icono al lado del título, es de tipo funcional y va a la derecha del título.\n   *\n   * @type {string}\n   * @memberof BcAccordionHeaderComponent\n   */\n  @Input() titleIcon = '';\n  /**\n   * Icono al lado del subtítulo, es de tipo funcional y va a la derecha del subtítulo.\n   *\n   * @type {string}\n   * @memberof BcAccordionHeaderComponent\n   */\n  @Input() subtitleIcon = '';\n  /**\n   * Indica el aria-labelledby para el comportamiento del componente.\n   */\n  @Input('aria-labelledby') ariaLabelledby: string;\n\n  /**\n   * Indica el aria-label para el comportamiento del componente.\n   */\n  @Input('aria-label') ariaLabel: string;\n  /**\n   * Icono de las acciones a la derecha, se muestran si la variable tiene algun valor diferente de [] (vacio),\n   * recibe un array de strings con los nombres de los iconos funcionales a mostrar.\n   *\n   * @type {Array<string>}\n   * @memberof BcAccordionHeaderComponent\n   */\n  @Input() actionsIcon: Array<string> = [];\n  /**\n   * Valores de las columnas a la derecha, se muestran si la variable tiene algun valor diferente de [] (vacio),\n   * recibe un array de tipo AccordionColumn con los valores que el usuario desee mostrar, máximo son 3 columnas (recomendado).\n   *\n   * @type {Array<AccordionColumn>}\n   * @memberof BcAccordionHeaderComponent\n   */\n  @Input() columns: Array<AccordionColumn> = [];\n  /**\n   * Evento cuando se selecciona una acción, se ejecuta cuando se ha hecho clic en algún icono de acción\n   * y retorna el nombre del icono al cual se le hizo clic.\n   *\n   * @type {EventEmitter}\n   * @memberof BcAccordionHeaderComponent\n   */\n  @Output() actionSelected: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Logo, va al lado izquierdo la acordeón.\n   *\n   * @type {string}\n   * @memberof BcAccordionHeaderComponent\n   */\n  @Input() srcLogo = '';\n\n  /**\n   * Logo, va al lado izquierdo la acordeón.\n   *\n   * @type {string}\n   * @memberof BcAccordionHeaderComponent\n   */\n  @Input() altLogo = 'logo';\n\n  /**\n   * Label a la parte derecha, es opcional y recibe cualquier valor string.\n   *\n   * @type {string}\n   * @memberof BcAccordionHeaderComponent\n   */\n  @Input() label = '';\n  /**\n   * Icono al extremo derecho, permite expandir o contraer la acordeón.\n   * Este rota 180º cuando esta activa de los contrario se mantiene en 0º.\n   *\n   * @memberof BcAccordionHeaderComponent\n   */\n  @Input() iconRight: 'arrow2-down' | 'arrow2-up' = 'arrow2-down';\n  updated: EventEmitter<any> = new EventEmitter();\n  /**\n   * Tooltip ubicado en el header del acordeón.\n   *  @type {ItooltipIcon}\n   * @memberof BcAccordionHeaderComponent\n   */\n  @Input() tooltipIcon: ItooltipIcon = {\n    isTooltip: false,\n    textTooltip: 'Text content',\n    positionTooltip: 'top'\n  };\n  /**\n   * Creates an instance of BcAccordionHeaderComponent.\n   * @memberof BcAccordionHeaderComponent\n   */\n  constructor(private bcHelperService: BcHelperService, public elementRef: ElementRef, private render: Renderer2) {}\n\n  ngOnInit(): void {\n    if (this.columns.length > 0) {\n      this.lastValueColumn = this.columns[this.columns.length - 1].value;\n    }\n  }\n\n  ngOnChanges(): void {\n    this.updated.emit(true);\n  }\n  /**\n   * Retorna el nombre del icono de la acción clickeada\n   * @param action  acción seleccionada\n   */\n  selectAction(action: string) {\n    this.actionSelected.emit(action);\n  }\n}\n","<header [id]=\"componentId\">\n  <ng-container *ngIf=\"columns.length > 0; else otherAccordions\">\n    <section class=\"bc-accordion-container-columns-item bc-flex\">\n      <section class=\"bc-accordion-header-left\">\n        <bc-icon aria-label=\"{{ leftIcon }}\" size=\"sm\" aria-hidden=\"true\" *ngIf=\"leftIcon\">\n          {{ leftIcon }}\n        </bc-icon>\n        <img class=\"bc-img\" src=\"{{ srcLogo }}\" alt=\"{{ altLogo }}\" *ngIf=\"srcLogo\" />\n        <section class=\"bc-accordion-text-container\">\n          <h6 class=\"bc-accordion-title\">\n            {{ title }}\n            <bc-icon\n              *ngIf=\"tooltipIcon.isTooltip\"\n              class=\"bc-icon bc-tooltip\"\n              bc-tooltip\n              [bcTooltipPosition]=\"tooltipIcon.positionTooltip\"\n              [bcTooltipText]=\"tooltipIcon.textTooltip\"\n            >\n              info-circle\n            </bc-icon>\n          </h6>\n          <p class=\"bc-accordion-subtitle\" *ngIf=\"subtitle\">\n            {{ subtitle }}\n            <bc-icon\n              *ngIf=\"subtitleIcon\"\n              size=\"sm\"\n              class=\"bc-icon bc-tooltip\"\n              bc-tooltip\n              [bcTooltipPosition]=\"tooltipIcon.positionTooltip\"\n              [bcTooltipText]=\"tooltipIcon.textTooltip\"\n            >\n              {{ subtitleIcon }}\n            </bc-icon>\n          </p>\n        </section>\n      </section>\n      <section class=\"bc-accordion-header-right\">\n        <p class=\"bc-accordion-label\" *ngIf=\"label\">{{ label }}</p>\n        <div class=\"bc-accordion-columns-container bc-flex\" *ngIf=\"columns.length > 0\">\n          <h6\n            class=\"bc-accordion-column\"\n            *ngFor=\"let column of columns\"\n            [ngClass]=\"{ 'bc-align-left': column.alignLeft }\"\n          >\n            {{ column.value }}\n            <span class=\"bc-accordion-column-exchange\" *ngIf=\"column.exchange\">{{ column.exchange }}</span>\n          </h6>\n        </div>\n        <div class=\"bc-accordion-action-container\" *ngIf=\"actionsIcon.length > 0\">\n          <bc-icon-button\n            *ngFor=\"let icon of actionsIcon\"\n            [type]=\"'ghost'\"\n            [size]=\"'medium'\"\n            [customIcon]=\"icon\"\n            [ariaLabel]=\"icon\"\n            (click)=\"selectAction(icon)\"\n          ></bc-icon-button>\n        </div>\n        <bc-icon size=\"sm \" aria-hidden=\"true\" class=\"bc-toggle-button\">\n          {{ iconRight }}\n        </bc-icon>\n      </section>\n    </section>\n    <section class=\"bc-accordion-container-column-mobile bc-flex bc-justify-content-end\">\n      <div class=\"bc-accordion-columns-container\">\n        <h6 class=\"bc-accordion-column\">{{ lastValueColumn }}</h6>\n      </div>\n    </section>\n  </ng-container>\n\n  <ng-template #otherAccordions>\n    <section class=\"bc-accordion-header-left\">\n      <bc-icon aria-label=\"{{ leftIcon }}\" size=\"sm\" aria-hidden=\"true\" *ngIf=\"leftIcon\">\n        {{ leftIcon }}\n      </bc-icon>\n      <img class=\"bc-img\" src=\"{{ srcLogo }}\" alt=\"{{ altLogo }}\" *ngIf=\"srcLogo\" />\n      <section class=\"bc-accordion-text-container\">\n        <h6 class=\"bc-accordion-title\">\n          {{ title }}\n          <bc-icon\n            *ngIf=\"tooltipIcon.isTooltip\"\n            class=\"bc-icon bc-tooltip\"\n            bc-tooltip\n            [bcTooltipPosition]=\"tooltipIcon.positionTooltip\"\n            [bcTooltipText]=\"tooltipIcon.textTooltip\"\n          >\n            info-circle\n          </bc-icon>\n        </h6>\n        <p class=\"bc-accordion-subtitle\" *ngIf=\"subtitle\">\n          {{ subtitle }}\n          <bc-icon\n            *ngIf=\"subtitleIcon\"\n            size=\"sm\"\n            class=\"bc-icon bc-tooltip\"\n            bc-tooltip\n            [bcTooltipPosition]=\"tooltipIcon.positionTooltip\"\n            [bcTooltipText]=\"tooltipIcon.textTooltip\"\n          >\n            {{ subtitleIcon }}\n          </bc-icon>\n        </p>\n      </section>\n    </section>\n    <section class=\"bc-accordion-header-right\">\n      <p class=\"bc-accordion-label\" *ngIf=\"label\">{{ label }}</p>\n      <div class=\"bc-accordion-columns-container\" *ngIf=\"columns.length > 0\">\n        <h6\n          class=\"bc-accordion-column\"\n          *ngFor=\"let column of columns\"\n          [ngClass]=\"{ 'bc-align-left': column.alignLeft }\"\n        >\n          {{ column.value }}\n          <span class=\"bc-accordion-column-exchange\" *ngIf=\"column.exchange\">{{ column.exchange }}</span>\n        </h6>\n      </div>\n      <div class=\"bc-accordion-action-container\" *ngIf=\"actionsIcon.length > 0\">\n        <bc-icon-button\n          *ngFor=\"let icon of actionsIcon\"\n          [type]=\"'ghost'\"\n          [size]=\"'medium'\"\n          [customIcon]=\"icon\"\n          [ariaLabel]=\"icon\"\n          (click)=\"selectAction(icon)\"\n        ></bc-icon-button>\n      </div>\n      <bc-icon size=\"sm \" aria-hidden=\"true\" class=\"bc-toggle-button\">\n        {{ iconRight }}\n      </bc-icon>\n    </section>\n  </ng-template>\n</header>\n","import {\n  Component,\n  ElementRef,\n  AfterViewInit,\n  Input,\n  EventEmitter,\n  Output,\n  ContentChildren,\n  QueryList,\n} from '@angular/core';\nimport { BcAccordionBehavior } from '@bancolombia/design-system-behaviors';\nimport { BcHelperService } from '@bancolombia/design-system-web/bc-helpers';\nimport { BcAccordionHeaderComponent } from './bc-accordion-header/bc-accordion-header.component';\n/**\n * Importa el Acordeón para contener elementos\n *\n * @export\n * @class BcAccordionsGroupComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'bc-accordions-group',\n  templateUrl: 'bc-accordion-group.component.html',\n})\nexport class BcAccordionGroupComponent implements AfterViewInit {\n\n  /**\n   * Define el comportamiento de evento expandir de la acordeón\n   * Si es single, solo se podrá expandir una acordeón a la vez\n   * es decir, al expandir una se cierra la que estaba activa.\n   * Valor por defecto es false.\n   *\n   * @memberof BcAccordionGroupComponent\n   */\n  @Input() single = false;\n\n  /**\n   * Comportamiento del componente\n   *\n   * @type {BcAccordionBehavior}\n   * @memberof BcAccordionGroupComponent\n   */\n  bcAccordionGroupBehavior: BcAccordionBehavior;\n\n  /**\n   * Evento que indica el index de una acordeón cuando esta es abierta o activada\n   *\n   * @type {EventEmitter<number>}\n   * @memberof BcAccordionGroupComponent\n   */\n  @Output() select: EventEmitter<number> = new EventEmitter<number>();\n\n  @ContentChildren(BcAccordionHeaderComponent, { descendants: true }) headers: QueryList<BcAccordionHeaderComponent>;\n\n  @Input() componentId: string = this.bcHelperService.getId(this);\n\n  /**\n   * Creates an instance of BcAccordionGroupComponent.\n   * @param {ElementRef} elementRef\n   * @memberof BcAccordionGroupComponent\n   */\n  constructor(private bcHelperService: BcHelperService, private elementRef: ElementRef) {}\n\n  ngAfterViewInit(): void {\n    this.bcAccordionGroupBehavior = new BcAccordionBehavior();\n    this.bcAccordionGroupBehavior.activeFunction = (index: any) => {\n      this.select.emit(index);\n    };\n    this.initBehavior();\n    this.headers.changes.subscribe((res) => {\n      this.headers = res;\n      this.initBehavior();\n    });\n  }\n\n  private initBehavior() {\n    this.bcAccordionGroupBehavior.setElement(this.elementRef.nativeElement);\n    this.bcAccordionGroupBehavior.setUp(true);\n  }\n}\n","<div\n  [id]=\"componentId\"\n  class=\"bc-accordions-group\"\n  role=\"group\"\n  [attr.data-is-single]=\"single ? 'true' : null\"\n>\n  <ng-content></ng-content>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { BcHelperService } from '@bancolombia/design-system-web/bc-helpers';\n\n/**\n * Importa el acordeón para contener info\n * El acordeón colapsa desde un contenedor principal para de esta manera\n * mostrar información interna que haya dentro del mismo el cual se expande o se contrae al realizar clic.\n * @export\n * @class BcAccordionComponent\n */\n@Component({\n  selector: 'bc-accordion',\n  templateUrl: './bc-accordion.component.html'\n})\nexport class BcAccordionComponent {\n  /**\n   * Esta entrada permite indicar un id único al componente dentro del DOM.\n   *\n   * @type {string}\n   * @memberof BcInputSelectComponent\n   */\n  @Input() componentId: string = this.bcHelperService.getId(this);\n\n  /**\n   * Tipo de acordeón [ basic(default) | info | advance | column | minimal | minimal-unbordered]\n   * Define la esctructura que va a tener el acordeón, por defecto es básica (basic).\n   *\n   * @type {string}\n   * @memberof BcAccordionHeaderComponent\n   */\n  @Input() type: string = 'basic';\n  /**\n   * Permite configurar el comportamiento del acordeón para que este se muestre expandido desde su carga en el DOM\n   * es de tipo booleana y por defecto es false.\n   *\n   * @type {boolean}\n   * @memberof BcAccordionHeaderComponent\n   */\n  @Input() active: boolean = false;\n\n  /**\n   * Parametro por deprecar, debido a que no es parte del componente, de acuerdo a documentacion Figma.\n   * No realiza ninguna acción.\n   *\n   * @type {boolean}\n   * @memberof BcAccordionHeaderComponent\n   */\n  @Input() disabled: boolean = false;\n\n  constructor(private bcHelperService: BcHelperService) {}\n}\n","<article\n  class=\"bc-accordion bc-accordion-{{ type }} bc-accordion-container-{{ type }}\"\n  id=\"{{ componentId }}\"\n  [ngClass]=\"{ 'bc-active': active}\"\n>\n  <ng-content></ng-content>\n</article>\n","import { Directive, TemplateRef } from '@angular/core';\n\n@Directive({\n  selector: '[bc-accordion-content-dir]'\n})\nexport class BcAccordionContentDirDirective {\n  constructor(public templateRef: TemplateRef<unknown>) {}\n}\n","import { Component, ContentChild, ElementRef, Input, ViewChild } from '@angular/core';\nimport { BcHelperService } from '@bancolombia/design-system-web/bc-helpers';\nimport { BcAccordionContentDirDirective } from './bc-accordion-content-dir.directive';\n\n/**\n * Importa el acordeón para contener info\n * El acordeón colapsa desde un contenedor principal para de esta manera\n * mostrar información interna que haya dentro del mismo el cual se expande o se contrae al realizar clic.\n *\n * @export\n * @class BcAccordionContentComponent\n */\n@Component({\n  selector: 'bc-accordion-content',\n  queries: {\n    contentRef: new ViewChild('contentRef')\n  },\n  templateUrl: './bc-accordion-content.component.html'\n})\nexport class BcAccordionContentComponent {\n  @Input() componentId: string = this.bcHelperService.getId(this);\n\n  @ContentChild(BcAccordionContentDirDirective) content!: BcAccordionContentDirDirective;\n\n  private _wasOpened: boolean = false;\n\n  constructor(private bcHelperService: BcHelperService, private elementHTML: ElementRef) {}\n\n  isActive(): boolean {\n    const hostElement = this.elementHTML.nativeElement as HTMLElement;\n    const parentElement = hostElement.parentNode as HTMLElement;\n    const isOpen = parentElement.classList.contains('bc-active');\n    if (!this._wasOpened && isOpen) {\n      this._wasOpened = true;\n    }\n    return this._wasOpened;\n  }\n}\n","<section class=\"bc-accordion-content\" [id]=\"componentId\">\n  <div *ngIf=\"isActive()\">\n    <ng-content></ng-content>\n    <ng-container [ngTemplateOutlet]=\"content?.templateRef\"></ng-container>\n  </div>\n</section>\n","import { BcAccordionContentComponent } from './bc-accordion-content/bc-accordion-content.component';\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BcAccordionGroupComponent } from './bc-accordion-group.component';\nimport { BcAccordionComponent } from './bc-accordion/bc-accordion.component';\nimport { BcAccordionHeaderComponent } from './bc-accordion-header/bc-accordion-header.component';\nimport { BcIconModule } from '@bancolombia/design-system-web/bc-icon';\nimport { BcTooltipModule } from '@bancolombia/design-system-web/bc-tooltip';\nimport { BcIconButtonModule } from '@bancolombia/design-system-web/bc-icon-button';\nimport { BcAccordionContentDirDirective } from './bc-accordion-content/bc-accordion-content-dir.directive';\n\n/**\n * Importa el acordion con los diseños de Bancolombia S.A.\n * @package bc-accordions-group, bc-accordion, bc-accordion-header, bc-accordion-content\n * @Component bc-accordions-group\n * @Description Este componente parametriza el comportamiento del acordeon como grupo\n * @param multiple Define el comportamiento de evento expandir de la acordeón\n * Si es multiple, solo se podrá expandir una acordeón a la vez\n * es decir, al expandir una se cierra la que estaba activa\n * @Component bc-accordion\n * @Description Este componente se encarga de dar formato a cada acordeon y el comportamiento\n * de abierto y cerrado\n * @param type Tipo de accordeón [ basic(default) | info | advance | column | minimal | minimal-unbordered]\n * @Component bc-accordion-header\n * @param title  Título principal\n * @param subtitle  Subtítulo\n * @param leftIcon  Icono a la izquierda\n * @param titleIcon  Icono al lado del título\n * @param subtitleIcon  Icono al lado del subtítulo\n * @param active  Indicar si esta activo\n * @param actionsIcon  Icono de las acciones a la derecha\n * @param columns  Valores de las columnas a la derecha de tipo AccordionColumn\n * @param label  Label a la parte derecha\n * @param actionSelected Evento cuando se selecciona una acción\n * @param iconRight Icono al extremo derecho, permite expadir o contraer la acordeón\n * @Component bc-accordion-content\n * @Description Este componente organiza administra el contenido del acordeon el cual\n * es libre para el desarrollador\n *\n * @example\n *  <h3>Acordeón avazando</h3>\n *   <bc-accordions-group>\n *     <bc-accordion>\n *       <bc-accordion-header\n *         leftIcon=\"idea\"\n *         title=\"Acordeón avazando\"\n *         titleIcon=\"info\"\n *         subtitle=\"Subtítulo\"\n *         subtitleIcon=\"info\"\n *         [actionsIcon]=\"actionsIcon\"\n *         (actionSelected)=\"myAction($event)\"\n *       ></bc-accordion-header>\n *       <bc-accordion-content>\n *         Tiene los elementos esenciales y se le adiciona un subtítulo y más\n *         opciones de iconos para acciones relacionadas al componente.\n *       </bc-accordion-content>\n *     </bc-accordion>\n *   </bc-accordions-group>\n *\n * @author: Bancolombia S.A\n */\n@NgModule({\n  declarations: [\n    BcAccordionGroupComponent,\n    BcAccordionComponent,\n    BcAccordionHeaderComponent,\n    BcAccordionContentComponent,\n    BcAccordionContentDirDirective\n  ],\n  imports: [CommonModule, BcIconModule, BcTooltipModule, BcIconButtonModule],\n  exports: [BcAccordionGroupComponent, BcAccordionComponent, BcAccordionHeaderComponent, BcAccordionContentComponent, BcAccordionContentDirDirective],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class BcAccordionModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i2"],"mappings":"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"}