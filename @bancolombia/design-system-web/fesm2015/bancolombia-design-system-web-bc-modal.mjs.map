{"version":3,"file":"bancolombia-design-system-web-bc-modal.mjs","sources":["../../../projects/ng_bds/bc-modal/bc-modal.component.ts","../../../projects/ng_bds/bc-modal/bc-modal.component.html","../../../projects/ng_bds/bc-modal/bc-modal.module.ts","../../../projects/ng_bds/bc-modal/bancolombia-design-system-web-bc-modal.ts"],"sourcesContent":["import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n  ElementRef,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { BcModalBehavior } from '@bancolombia/design-system-behaviors';\nimport { BcHelperService } from '@bancolombia/design-system-web/bc-helpers';\nconst MODAL_N100 = 100;\n\n/**\n * Componente modal\n *\n * @export\n * @class BcModalComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'bc-modal',\n  templateUrl: 'bc-modal.component.html',\n  styleUrls: [],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BcModalComponent implements AfterViewInit, OnChanges {\n  bcModalBehavior: BcModalBehavior;\n\n  constructor(private ref: ElementRef, private helperService: BcHelperService) {\n    this.bcModalBehavior = new BcModalBehavior();\n    this.bcModalBehavior.closeModalCallback = () => {\n        this.closeModalEmitEvent();\n    };\n  }\n\n  /**\n   * Id del modal.\n   *\n   * @type {string}\n   * @memberof BcModalComponent\n   */\n  @Input() id: string = this.helperService.getId(this);\n\n  /**\n   * Título del modal.\n   *\n   * @type {string}\n   * @memberof BcModalComponent\n   */\n  @Input() title: string = '';\n\n  /**\n   * Subtítulo del modal este se sitúa de bajo del titulo principal de la modal).\n   *\n   * @type {string}\n   * @memberof BcModalComponent\n   */\n  @Input() subTitle: string = '';\n\n  /**\n   * Texto del bóton del modal.\n   *\n   * @type {string}\n   * @memberof BcModalComponent\n   */\n  @Input() textBtn: string = '';\n\n  /**\n   * Texto del botón izquierdo.\n   *\n   * @type {string}\n   * @memberof BcModalComponent\n   */\n  @Input() textBtnLeft: string = '';\n\n  /**\n   * Tipo del ícono que usará el modal, los permitidos son : {'error', 'success', 'warning', 'info'},\n   * el ícono por defecto es 'default' (vacío),Si el type Icon es diferente de default no va a mostrar la ilustración.\n   *\n   * @type {string}\n   * @memberof BcModalComponent\n   */\n  @Input() typeIcon: 'error' | 'success' | 'warning' | 'info' | 'default' = 'default';\n\n  /**\n    * texto para el aria-label del botón de cerrar.\n    *\n    * @type {string}\n    * @memberof BcTransactionStatusComponent\n    */\n@Input() textAriaLabel: 'cerrar'= 'cerrar';\n\n/**\n    * texto para aria-label del modal.\n    *\n    * @type {string}\n    * @memberof BcTransactionStatusComponent\n    */\n@Input() arialabelmodal: '';\n\n  /**\n   * Tipo de acción, por defecto \"Simple\", este dado de entrada sirve para definir si el pop-up tiene botón de cancelación o no.\n   *\n   * @type {string}\n   * @memberof BcModalComponent\n   */\n  @Input() isCancellable: true | false = false;\n\n  /**\n   * Indica el ancho del modal, por defecto \"Small\".\n   * @type {string}\n   * @memberof BcModalComponent\n   */\n  @Input() customWidth: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Indica la alineación del título del modal, por defecto \"center\".\n   * @type {string}\n   * @memberof BcModalComponent\n   */\n  @Input() titleAlign: 'center' | 'left' = 'center';\n\n  /**\n   * Indica si el modal puede o no cerrarse haciendo click fuera de él, admite dos valores, true o false.\n   *\n   * @type {(true | false)}\n   * @memberof BcModalComponent\n   */\n  @Input() outerCloseTap: boolean = true;\n\n  /**\n   * Se ejecuta cuando se hace click en alguno de los botones de acción\n   *\n   * @type {EventEmitter<number>}\n   * @memberof BcModalComponent\n   */\n  @Output() stateClick: EventEmitter<number> = new EventEmitter<number>();\n\n  /**\n   * Se ejecuta cuando el modal es cerrado (descartado) desde la equis\n   *\n   * @type {EventEmitter<any>}\n   * @memberof BcModalComponent\n   */\n  @Output() closeModalEvent: EventEmitter<any> = new EventEmitter<any>();\n\n    /**\n   * Permite deshabilitar el cierre del modal por medio de la tecla ESc\n   * valor por defecto es true (habilitado)\n   *\n   * @type {boolean}\n   * @memberof BcModalComponent\n   */\n    @Input() closedModalEsc: boolean = true;\n\n  /**\n   * Indica la orientación del modal ejemplo en caso de tener varios botones les da una, alineación vertical u horizontal.\n   * @type {Boolean}\n   * @memberof BcModalComponent\n   */\n  @Input() buttonAlignment: 'horizontal' | 'vertical' = 'horizontal';\n\n  /**\n   * Indica la posibilidad de utilizar o no los botones por defecto del modal\n   * (Primary-Secondary), por defecto \"True\".\n   * @type {boolean}\n   * @memberof BcModalComponent\n   */\n  @Input() displayButton: boolean = true;\n\n  /**\n   * Indica la posibilidad ocultar el boton close de la esquina superior derecha\n   * por defecto es false.\n   * @type {boolean}\n   * @memberof BcModalComponent\n   */\n  @Input() hideCloseButton: boolean = false;\n  /**\n   * Permite deshabilitar el boton primario (derecho) del modal\n   * valor por defecto es false\n   *\n   * @type {boolean}\n   * @memberof BcModalComponent\n   */\n  @Input() primaryButtonDisabled: boolean = false;\n\n\n  \n\n  ngAfterViewInit() {\n    this.bcModalBehavior.setId(this.id);\n    this.bcModalBehavior.callback = (typeTask) => {\n      this.callback(typeTask);\n    };\n    this.bcModalBehavior.setUp();\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    const sizeMap = {\n      'error': 'Mensaje de error',\n      'success': 'Mensaje de exito',\n      'warning': 'Mensaje de alerta',\n      'info': 'Mensaje informativo',\n\n      };\n    this.arialabelmodal = sizeMap[this.typeIcon];\n\n    setTimeout(() => {\n      this.bcModalBehavior.setId(this.id);\n      this.bcModalBehavior.setUp(true);\n    }, MODAL_N100);\n    this.bcModalBehavior.setEventCloseEsc(this.closedModalEsc);\n  }\n\n  /**\n   * Abre el modal.\n   *\n   * @memberof BcModalComponent\n   */\n  openModal() {\n    this.bcModalBehavior.openModal();\n  }\n  /**\n   * Cierra el modal.\n   *\n   * @memberof BcModalComponent\n   */\n  shutDown() {\n    this.bcModalBehavior.closeModal();\n  }\n  /**\n   * Retorna el tipo de tarea ejecuta por cada uno de los botones del modal (Primario o Secundario).\n   *\n   * @memberof BcModalComponent\n   */\n  private callback(typeTask: number) {\n    this.stateClick.emit(typeTask);\n  }\n\n  /**\n   * Se ejecuta cuando se cierra (descarta) el modal.\n   *\n   * @memberof BcModalComponent\n   */\n  closeModalEmitEvent() {\n    this.closeModalEvent.emit(null);\n  }\n\n\n}\n","<article class=\"bc-modal\" [id]=\"id\" role=\"dialog\" [attr.outerCloseTap]=\"outerCloseTap\"\n    aria-labelledby=\"id\" aria-modal=\"true\">\n    <label for=\"\" class=\"bc-modal-close\"></label>\n    <section [attr.customWidth]=\"customWidth\" class=\"bc-modal-container\" [attr.titleAlign]=\"titleAlign\"\n        [attr.buttonAlignment]=\"buttonAlignment\" [attr.subTitle]=\"typeIcon\"\n        [attr.typeIcon]=\"typeIcon\" [attr.isCancellable]=\"isCancellable\" [attr.displayButton]=\"displayButton\"\n        [attr.role]=\"'alertdialog'\"[attr.aria-modal]=\"'true'\"\n        [attr.aria-label]=\"arialabelmodal?arialabelmodal:typeIcon\">\n\n        <section class=\"bc-modal-close-button-container\">\n          <div>\n            <button class=\"bc-direction-row bc-icon bc-modal-close-button bc-sm\" *ngIf=\"!hideCloseButton\"\n            [attr.aria-label]=\"textAriaLabel\">error\n          </button>\n        </div>\n        </section>\n        <div *ngIf=\"typeIcon === 'default'\" class=\"bc-modal-illustration\">\n            <ng-content select=\"[illustration]\"></ng-content>\n        </div>\n        <section *ngIf=\"typeIcon !== 'default'\" class=\"bc-modal-icon-container\">\n            <div [ngSwitch]=\"typeIcon\">\n                <bc-icon class=\" bc-modal-center-icon bc-md\" *ngSwitchCase=\"'error'\">error-circle</bc-icon>\n                <bc-icon class=\" bc-modal-center-icon bc-md\" *ngSwitchCase=\"'warning'\">hand</bc-icon>\n                <bc-icon class=\" bc-modal-center-icon bc-md\" *ngSwitchCase=\"'success'\">ok</bc-icon>\n                <bc-icon class=\" bc-modal-center-icon bc-md\" *ngSwitchCase=\"'info'\">idea</bc-icon>\n            </div>\n        </section>\n        <section class=\"bc-modal-title bc-direction-row bc-margin-top-2 bc-margin-bottom-2\"[attr.aria-labelledby]=\"id\">\n            <h4 [id]=\"id\" class=\"modal-title-label\" id=\"modal title\">{{title}}</h4>\n        </section>\n        <section class=\"bc-modal-title bc-direction-row\">\n            <p>{{subTitle}}</p>\n        </section>\n        <section class=\"bc-modal-content\" [attr.aria-describedby]=\"'elemento Descripcion'\">\n            <ng-content select=\"[modalContent]\"></ng-content>\n        </section>\n        <section class=\"bc-modal-button-container\">\n            <button bc-button sizeButton=\"small\" [disabled]=\"primaryButtonDisabled\">{{textBtn}}</button>\n            <button *ngIf=\" isCancellable \" bc-button typeButton=\"secondary\" sizeButton=\"small\">{{textBtnLeft}}</button>\n        </section>\n        <section class=\"bc-modal-footer\">\n            <ng-content select=\"[modalFooter] \"></ng-content>\n        </section>\n    </section>\n</article>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BcModalComponent } from './bc-modal.component';\nimport { FormsModule } from '@angular/forms';\nimport { BcButtonModule } from '@bancolombia/design-system-web/bc-button';\nimport { BcIconModule } from '@bancolombia/design-system-web/bc-icon';\n/**\n * Importa las alertas con los diseños de Bancolombia S.A.\n * @package bc-modal\n * @description Los modales son mensajes que comunican información y permiten dar una respuesta oportuna de parte del usuario\n * @param() title = ''; es el titulo de la alerta\n * @param() subTitle = ''; es el texto bajo el titulo de la alerta\n * @param() textBtn = ''; Texto del boton principal\n * @param() textBtnLeft = ''; Texto del boton secundario\n * @param() showModal= false; Boleano que detona el modal\n * @param() typeIcon = 'default'; tipo de icono pueder ser success, warning, info, inactive, error\n * @param() typeAction = 'simple'; tipo de acción establece si hay uno o dos botones sus posibles valores simple, double\n * @Output() stateClick = new EventEmitter<boolean>(); Emisor que retorna true cuando se oprime\n * el botón principal, false en el boton secundario\n * @example\n * @author: Bancolombia S.A\n */\n\n@NgModule({\n  declarations: [BcModalComponent],\n  imports: [BcIconModule, BcButtonModule, CommonModule, FormsModule],\n  exports: [BcModalComponent],\n})\nexport class BcModalModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}