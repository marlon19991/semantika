{"version":3,"file":"bancolombia-design-system-web-bc-inline-alert.mjs","sources":["../../../projects/ng_bds/bc-inline-alert/bc-inline-alert.component.ts","../../../projects/ng_bds/bc-inline-alert/bc-inline-alert.component.html","../../../projects/ng_bds/bc-inline-alert/bc-inline-alert.module.ts","../../../projects/ng_bds/bc-inline-alert/bancolombia-design-system-web-bc-inline-alert.ts"],"sourcesContent":["import { Component, AfterViewInit, Input, Output, EventEmitter } from '@angular/core';\nimport { BcInlineAlertBehavior } from '@bancolombia/design-system-behaviors';\nimport { BcHelperService } from '@bancolombia/design-system-web/bc-helpers';\nimport { BcDialog } from '@bancolombia/design-system-web/bc-services';\n\n/**\n * Importa las alertas con los diseños de Bancolombia S.A.\n * Las alertas corresponde a un cuadro de diálogo que disponibiliza\n * información de manera flotante o fija.\n *\n * @export\n * @class BcInlineAlertComponent\n * @implements {AfterViewInit}\n */\n@Component({\n  selector: 'bc-inline-alert',\n  templateUrl: 'bc-inline-alert.component.html',\n  styles: [],\n})\nexport class BcInlineAlertComponent extends BcDialog implements AfterViewInit {\n  /**\n   * Comportamiento\n   *\n   * @type {BcInlineAlertBehavior}\n   * @memberof BcInlineAlertComponent\n   */\n  bcAlertBehavior: BcInlineAlertBehavior;\n  icon = '';\n  /**\n   * Tipos de iconos\n   *\n   * @memberof BcInlineAlertComponent\n   */\n  icons = {\n    error: 'error',\n    success: 'ok',\n    info: 'idea',\n    warning: 'hand'\n  };\n  /**\n  * Título de la alerta.\n  *\n  * @memberof BcInlineAlertComponent\n  */\n  @Input() title = '';\n  /**\n   * Texto de la alerta.\n   *\n   * @memberof BcInlineAlertComponent\n   */\n  @Input() text = '';\n  /**\n   *  \n   * Variante de color secundaria en tema light/dark\n   * @type {boolean}\n   * @memberof BcInlineAlertComponent\n   */\n  @Input() secondColor: boolean = false;\n  /**\n   * Links en la alerta, solo se pintan los 2 primeros items del arreglo.\n   * @type: Array<Link>\n   * @memberof BcInlineAlertComponent\n   */\n  @Input() links: Array<LinkAlert> = [];\n  /**\n   * Tipo de alerta [ \"error\" | \"success\" | \"info\" | \"warning\" ].\n   * @type {string}\n   * @memberof BcInlineAlertComponent\n   */\n  @Input() type: string;\n  /**\n   *\n   * Id del componente.\n   *\n   * @type {string}\n   * @memberof BcInlineAlertComponent\n   */\n  @Input() componentId: string = this.helper.getId(this);\n  /**\n   *\n   * Aria Label del botón de cierre\n   *\n   * @type {string}\n   * @memberof BcInlineAlertComponent\n   */\n  @Input() lectorBtnClose: string = \"Cerrar alerta\";\n  /**\n   *\n   * Aria Label del componente Alert\n   *\n   * @type {string}\n   * @memberof BcInlineAlertComponent\n   */\n  @Input() lectorAlert: string = \"Alerta preventiva\";\n\n  /**\n   * Si la alerta es estática, indica si se puede descartar o cerrar.\n   *\n   * @type {boolean}\n   * @memberof BcInlineAlertComponent\n   */\n  @Input() dismissible: boolean = false;\n  /**\n   * Se ejecuta cuando la alerta se cierra, aplica solo para alertas inline.\n   *\n   * @type {EventEmitter<any>}\n   * @memberof BcInlineAlertComponent\n   */\n  @Output() onclose: EventEmitter<any> = new EventEmitter();\n  /**\n   * Se ejecuta cuando se le da click a un link dentro del inline.\n   *\n   * @type {EventEmitter<any>}\n   * @memberof BcInlineAlertComponent\n   */\n  @Output() linkClick: EventEmitter<any> = new EventEmitter();\n  /**\n   * Indica el id del elemento de referencia para insertar la alerta\n   *\n   * @type {EventEmitter<any>}\n   * @memberof BcInlineAlertComponent\n   */\n  elementRef: any = '';\n\n  constructor(private helper: BcHelperService) {\n    super();\n    this.bcAlertBehavior = new BcInlineAlertBehavior();\n  }\n   ngAfterViewInit(): void {\n    this.bcAlertBehavior.setId(this.componentId);\n    this.bcAlertBehavior.onClose((event: any) => {\n      this.onclose.emit(event);\n    });\n    this.bcAlertBehavior.setUp();\n    setTimeout(() => {\n      this.setIconByType();\n    });\n  }\n  /**\n   * Validar icono según tipo de alerta\n   *\n   * @memberof BcInlineAlertComponent\n   */\n  setIconByType() {\n    this.icon = this.icons[this.type]\n      ? this.icons[this.type]\n      : this.icons.warning;\n  }\n  /**\n   * Atributos de la alerta\n   *\n   * @param {*} inputs\n   * @memberof BcInlineAlertComponent\n   */\n  onInjectInputs(inputs: any): void {\n    this.componentId = inputs.id;\n    this.type = inputs.type;\n    this.title = inputs.title;\n    this.text = inputs.text;\n    this.links = inputs.links;\n    this.elementRef = inputs.elementRef;\n    this.dismissible = inputs.dismissible;\n    this.lectorAlert = inputs.lectorAlerta;\n    this.lectorBtnClose = inputs.lectorBtnClose;\n  }\n  /**\n   * Cerrar alerta\n   *\n   * @memberof BcInlineAlertComponent\n   */\n  closeIt(): void {\n    this.bcAlertBehavior.close();\n  }\n  /**\n   * Cancelar alerta\n   *\n   * @memberof BcInlineAlertComponent\n   */\n  cancelIt(): void {\n    this.dismiss('canceling');\n  }\n\n  /**\n   * Emite el evento cuando se le da click a un link\n   *\n   * @memberof BcInlineAlertComponent\n   */\n  clickEventLink(event) {\n    this.linkClick.emit({text: event.target.innerText,path: event.target.parentElement.href});\n  }\n}\n\ninterface LinkAlert {\n  url: string;\n  text: string;\n}\n","<article class=\"bc-inline-alert-active bc-inline-alert\" role=\"alert\" [id]=\"componentId\"\n    [ngClass]=\"{'bc-inline-alert-second-color': secondColor}\" [attr.aria-label]=\"lectorAlert\">\n    <section class=\"bc-inline-alert-status\">\n        <bc-transaction-status size=\"sm\" customIcon=\"{{ icon }}\" status=\"{{ type }}\"></bc-transaction-status>\n    </section>\n    <section class=\"bc-inline-alert-body\">\n        <section class=\"bc-inline-alert-content\">\n            <p class=\"bc-inline-alert-title\">{{ title }}</p>\n            <p class=\"bc-inline-alert-text\">{{ text }}</p>\n        </section>\n        <ul>\n            <li *ngFor=\"let l of links | slice: 0:2\">\n              <a *ngIf=\"l.url\" bc-link class=\"bc-inline-alert-link\" href=\"{{ l.url }}\" sizeLink=\"underlineLarge\"\n                target=\"_blank\" rel=\"noopener noreferrer\" typeLink=\"underline\" (click)=\"clickEventLink($event)\">\n                <u>{{ l.text }}</u>\n              </a>\n              <a *ngIf=\"!l.url\" bc-link class=\"bc-inline-alert-link\" sizeLink=\"underlineLarge\" target=\"_blank\"\n                rel=\"noopener noreferrer\" typeLink=\"underline\" (click)=\"clickEventLink($event)\">\n                <u>{{ l.text }}</u>\n              </a>\n            </li>\n        </ul>\n    </section>\n    <section *ngIf=\"dismissible\" class=\"bc-inline-alert-close\">\n        <bc-icon-button (click)=\"closeIt()\" size=\"small\" type=\"ghost\" customIcon=\"error\"\n            ariaLabel=\"{{ lectorBtnClose}}\">\n        </bc-icon-button>\n    </section>\n</article>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BcInlineAlertComponent } from './bc-inline-alert.component';\nimport { BcIconButtonModule } from '@bancolombia/design-system-web/bc-icon-button';\nimport { BcTransactionStatusModule } from '@bancolombia/design-system-web/bc-transaction-status';\nimport { BcLinkModule } from '@bancolombia/design-system-web/bc-link';\n@NgModule({\n    declarations: [BcInlineAlertComponent],\n    imports: [BcLinkModule, BcIconButtonModule, BcTransactionStatusModule, CommonModule],\n    exports: [BcInlineAlertComponent]\n})\nexport class BcInlineAlertModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}