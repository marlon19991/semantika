{"version":3,"file":"bancolombia-design-system-web-bc-stepper.mjs","sources":["../../../projects/ng_bds/bc-stepper/bc-stepper.component.ts","../../../projects/ng_bds/bc-stepper/bc-stepper.component.html","../../../projects/ng_bds/bc-stepper/bc-stepper.module.ts","../../../projects/ng_bds/bc-stepper/bancolombia-design-system-web-bc-stepper.ts"],"sourcesContent":["import { Component, Input, AfterViewInit, Output, EventEmitter, Optional, Self, ElementRef, Renderer2, OnChanges, SimpleChanges } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { BcStepperBehavior, ThemeCircles } from '@bancolombia/design-system-behaviors';\nimport { BcHelperService, BcGeneralInputComponent } from '@bancolombia/design-system-web/bc-helpers';\n\n@Component({\n  selector: 'bc-stepper',\n  templateUrl: 'bc-stepper.component.html'\n})\nexport class BcStepperComponent extends BcGeneralInputComponent implements AfterViewInit, OnChanges {\n  /**\n   * Arreglo de pasos que contendrá nuestro Stepper.\n   *\n   * @type {string[]}\n   * @memberof BcStepperComponent\n   */\n  @Input() steps: string[];\n\n  /**\n   * String que indicará la dirección horizontal o vertical del Stepper.\n   *\n   * @type {string}\n   * @memberof BcStepperComponent\n   */\n  @Input() direction: 'horizontal' | 'vertical' = 'horizontal';\n\n  /**\n   * String que indicará la equivalencia de color que tiene el componente.\n   *\n   * @type {string}\n   * @memberof BcStepperComponent\n   */\n    @Input() tokenColor: 'white-gray' | 'white-black' | 'gray-gray' | 'gray-black' = 'gray-gray';\n\n  /**\n   * Indica el aria-labelledby para el comportamiento del componente.\n   */\n\n   @Input('aria-labelledby') ariaLabelledby: string;\n\n   /**\n   * Indica el aria-label para el comportamiento del componente.\n   */\n\n    @Input('aria-label') ariaLabel: string;\n\n  /**\n   * Indica el id para el comportamiento del componente.\n   */\n\n  @Input() componentId: string = this.helper.getId(this);\n\n  /**Indica la posición inicial del paso en el componente, por defecto es el paso 1. */\n\n  @Input() indexPosition: number = 0;\n /**\n   * String que indicará el color de los cículos de los pasos inactivos.\n   *\n   * @type {string}\n   * @memberof BcStepperComponent\n   */\n  @Input() themeCircles: ThemeCircles=ThemeCircles.DARK;\n  \n  bcStepperBehavior: any;\n  constructor(@Self() @Optional() public controlDirective: NgControl, private helper: BcHelperService, private elementRef: ElementRef, private render: Renderer2) {\n    super();\n    this.bcStepperBehavior = new BcStepperBehavior();\n    if (controlDirective) {\n      controlDirective.valueAccessor = this as BcGeneralInputComponent;\n    }\n  }\n  ngOnChanges(changes: SimpleChanges): void {\n    this.setAria();\n  }\n\n  /**\n   * Habilita o deshabilita el componente.\n   *\n   * @type {(boolean)}\n   * @memberof BcStepperComponent\n   */\n\n  @Input() enabled: boolean = true;\n\n  /**\n   * Salida del valor actual del componente.\n   *\n   * @type {(EventEmitter<number>)}\n   * @memberof BcStepperComponent\n   */\n  @Output() valueOutput: EventEmitter<number> = new EventEmitter<number>();\n\n  ngAfterViewInit(): void {\n    this.setAria();\n    this.bcStepperBehavior.setId(this.componentId);\n    this.bcStepperBehavior.setLabels(this.steps);\n    this.bcStepperBehavior.setThemeCircles(this.themeCircles);\n    this.bcStepperBehavior.setInitIndexPosition(this.indexPosition);\n    this.bcStepperBehavior.outputFunction = (value) => this.setvalueOutput(value);\n    this.bcStepperBehavior.setUp();\n  }\n\n  /**\n   * Función que se encarga de avanzar el Stepper.\n   *\n   * @memberof BcStepperComponent\n   */\n  next() {\n    if (this.enabled) {\n      this.bcStepperBehavior.next();\n    }\n  }\n\n  /**\n   * Función que se encarga de retroceder el Stepper.\n   *\n   * @memberof BcStepperComponent\n   */\n  back() {\n    if (this.enabled) {\n      this.bcStepperBehavior.back();\n    }\n  }\n\n  /**\n   * Valores a salir.\n   *\n   * @param {(number)} param\n   * @memberof BcStepperComponent\n   */\n  setvalueOutput(param: number) {\n    this.value = param;\n    this.onTouch();\n    this.onChange(this.value);\n    this.valueOutput.emit(param);\n  }\n\n\n  /**\n   * Habilita o deshabilita el stepper\n   * true | false por defecto es false.\n   * @memberof BcStepperComponent\n   */\n  setDisabledState(isDisabled: boolean) {\n    this.enabled = !isDisabled;\n  }\n\n  writeValue(value:number) {\n    this.bcStepperBehavior.setValue(value)\n  }\n\n  setAria(){\n    const element= this.elementRef.nativeElement.querySelector(`article`);\n    if(this.ariaLabelledby){\n      this.render.setAttribute(element,'aria-labelledby',this.ariaLabelledby);\n    } else {\n      this.render.setAttribute(element,'aria-label',this.ariaLabel);\n    }\n  }\n}\n","<article [id]=\"componentId\" class=\"bc-stepper-{{direction}}\" role=\"tablist\" [attr.tokenColor]=\"tokenColor\">\n  <div class=\"bc-stepper-track\"></div>\n</article>","import { NgModule } from '@angular/core';\nimport { BcStepperComponent } from './bc-stepper.component';\n\n/**\n * Importa el componente switch con\n * los diseños de Bancolombia S.A.\n *\n * @componente <lib-bc-switch-web></lib-bc-switch-web>\n *\n * @param  disabled default: false\n * @param  required default: true\n * @fires changeState: Emite el valor del switch cuando hay un cambio (true || false)\n * @example\n * <lib-bc-switch-web\n *          (changeState)=\"myEvent($event)\"\n *          [id]=\"'yourID'\"\n *          [disabled]=false\n *          [required]=true\n *          [isChecked]=false> Label\n *  </lib-bc-switch-web>\n *\n * @author: Bancolombia S.A\n */\n@NgModule({\n  declarations: [BcStepperComponent],\n  imports: [],\n  exports: [BcStepperComponent],\n})\nexport class BcStepperModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}