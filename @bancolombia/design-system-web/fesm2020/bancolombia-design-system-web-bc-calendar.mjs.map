{"version":3,"file":"bancolombia-design-system-web-bc-calendar.mjs","sources":["../../../projects/ng_bds/bc-calendar/bc-calendar.component.ts","../../../projects/ng_bds/bc-calendar/bc-calendar.component.html","../../../projects/ng_bds/bc-calendar/bc-calendar.module.ts","../../../projects/ng_bds/bc-calendar/bancolombia-design-system-web-bc-calendar.ts"],"sourcesContent":["import { AfterViewInit, Component, EventEmitter, Input, OnInit, Optional, Output, Self } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { BcCalendarBehavior } from '@bancolombia/design-system-behaviors';\nimport { BcHelperService, BcGeneralInputComponent } from '@bancolombia/design-system-web/bc-helpers';\n/**\n * Importa el componete de calendario con los diseños de Bancolombia S.A.\n *\n * @export\n * @class BcCalendarComponent\n * @implements {OnInit}\n * @implements {AfterViewInit}\n */\n@Component({\n  selector: 'bc-calendar',\n  templateUrl: './bc-calendar.component.html',\n})\nexport class BcCalendarComponent extends BcGeneralInputComponent implements OnInit, AfterViewInit {\n  element;\n  holidaysParse: string;\n  /**\n   * Esta entrada de tipo string nos indica el tipo de calendario, puede ser simple o puede ser de tipo split.\n   *\n   * @type {string}\n   * @memberof BcCalendarComponent\n   */\n  @Input() calendarType: string;\n  /**\n  * Esta entrada de tupo string permite ver el formato de la fecha ya sea DD/MM/YY o solo mes y año o solo año.\n  * por lo cual el type del INPUT tambien cambia dependiendo este tipo de dato siendo de tipo date si es fullDate y siendo\n  * de tipo string si es mediumDate o shortDate\n  * @type {('fullDate' | 'mediumDate' | 'shortDate')}\n  * @memberof BcCalendarComponent\n  */\n  @Input() formatDate: 'fullDate' | 'mediumDate' | 'shortDate';\n\n  /**\n   * Esta entrada nos identifica el calendario en el DOM.\n   *\n   * @memberof BcCalendarComponent\n   */\n  @Input() componentId = this.bcHelperService.getId(this);\n\n  /**\n   * Esta entrada es un string que contiene un  arreglo que nos indica el rango de días, meses o años para el calendario.\n   * @type {string}\n   * @memberof BcCalendarComponent\n   */\n  @Input() fastButtons: string = \"[]\";\n\n  /**\n   * Esta entrada de tipo string nos indica la fecha minima seleccionable del calendario.\n   *\n   * @type {string}\n   * @memberof BcCalendarComponent\n   */\n  @Input() minDate: string;\n\n  /**\n   * Esta entrada de tipo string nos indica la fecha maxima seleccionable del calendario.\n   *\n   * @type {string}\n   * @memberof BcCalendarComponent\n   */\n  @Input() maxDate: string;\n\n  /**\n   * Esta entrada de tipo string nos indica el tipo de calendario, puede ser simple o puede ser de tipo split.\n   *\n   * @type {string}\n   * @memberof BcCalendarComponent\n   */\n  @Input() CalendarButton: string;\n\n  /**\n   * Esta entrada de tipo string nos indica el tipo de calendario, puede ser simple o puede ser de tipo split.\n   *\n   * @type {string}\n   * @memberof BcCalendarComponent\n   */\n  @Input() CalendarFilter: string;\n\n  /**\n   * Esta entrada de tipo string nos indica el tipo de calendario, puede ser simple o puede ser de tipo split.\n   *\n   * @type {string}\n   * @memberof BcCalendarComponent\n   */\n  @Input() CalendarHoliday: string;\n\n  /**\n   * Esta entrada de tipo string nos indica el tipo de calendario, puede ser simple o puede ser de tipo split.\n   *\n   * @type {string}\n   * @memberof BcCalendarComponent\n   */\n  @Input() rangesText: string[] = [];\n\n  /**\n   * Esta entrada de tipo string define los dias festivos del calendario\n   *\n   * @type {{ month: number, day: number }[]}\n   * @memberof BcCalendarComponent\n   */\n  @Input() holidayDates: { month: number, day: number }[] = [];\n\n  /**\n   * Esta salida permite obtener el valor del componente.\n   *\n   * @memberof BcCalendarComponent\n   */\n  @Output() updateValue = new EventEmitter<number>();\n\n  fastButtonsString: string = JSON.stringify(this.rangesText);\n  constructor(@Self() @Optional() public controlDirective: NgControl, private bcHelperService: BcHelperService) {\n    super();\n    this.element = new BcCalendarBehavior();\n    this.element.output = (value: any) => {\n      this.dispatchValue(value);\n    };\n    if (controlDirective) {\n      controlDirective.valueAccessor = this as BcGeneralInputComponent;\n    }\n  }\n\n  ngOnInit() {\n    this.holidaysParse = JSON.stringify(this.holidayDates);\n    this.fastButtonsString = JSON.stringify(this.rangesText);\n  }\n  ngAfterViewInit() {\n    this.element.setId(this.componentId);\n    this.element.setUp();\n    this.element.getMySelf().addEventListener('selectDate', (e: any) => {\n      this.dispatchValue(e.detail);\n    })\n\n  }\n\n  /**\n   * Función que muestra el valor del componente.\n   *\n   * @memberof BcCalendarComponent\n   */\n\n  dispatchValue(value: any): void {\n    this.onInput(value);\n    this.updateValue.emit(this.value);\n  }\n\n  onInput(value: any): void {\n    this.value = value;\n    this.onTouch();\n    this.onChange(this.value);\n  }\n\n  writeValue(value: any): void { }\n}\n","<div\n  [id]=\"componentId\"\n  class=\"bc-calendar\"\n  [attr.min]=\"minDate\"\n  [attr.max]=\"maxDate\"\n  [attr.formatDate]=\"formatDate\"\n  [attr.CalendarButton]=\"CalendarButton\"\n  [attr.CalendarFilter]=\"CalendarFilter\"\n  [attr.type]=\"calendarType\"\n  [attr.ranges]=\"fastButtons\"\n  [attr.rangesText]=\"rangesText\"\n  [attr.holidayDates]=\"holidaysParse\"\n></div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BcCalendarComponent } from './bc-calendar.component';\n\n/**\n * Importa el componente bcCalendar con\n * los diseños de Bancolombia S.A.\n *\n * @componente <bc-calendar>\n *\n * @param  {string} calendarType: Tipo de calendario a mostrar 'split' 'simple 'range' default : simple\n * @param {number[]} fastButtons: array de MAXIMO 3 numeros enteros para botones d eseleccion rapida. default: ninguno\n * @param {string} componentId: id html del elemento\n * @example\n * <bc-calendar></bc-calendar>\n *\n * @author: Bancolombia S.A\n */\n\n@NgModule({\n  declarations: [\n    BcCalendarComponent\n  ],\n  imports: [CommonModule],\n  exports: [\n    BcCalendarComponent\n  ],\n})\nexport class BcCalendarModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}