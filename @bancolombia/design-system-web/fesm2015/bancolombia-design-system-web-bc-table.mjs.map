{"version":3,"file":"bancolombia-design-system-web-bc-table.mjs","sources":["../../../projects/ng_bds/bc-table/bc-table-content/bc-table-content.component.ts","../../../projects/ng_bds/bc-table/bc-table-header/bc-table-header.component.ts","../../../projects/ng_bds/bc-table/bc-table-header/bc-table-header.component.html","../../../projects/ng_bds/bc-table/bc-table-directives/bc-table.directive.ts","../../../projects/ng_bds/bc-table/bc-table-footer/bc-table-footer.component.ts","../../../projects/ng_bds/bc-table/bc-table-footer/bc-table-footer.component.html","../../../projects/ng_bds/bc-table/bc-table-dropdown/bc-table-dropdown.component.ts","../../../projects/ng_bds/bc-table/bc-table-dropdown/bc-table-dropdown.component.html","../../../projects/ng_bds/bc-table/bc-table-container/bc-table-container.component.ts","../../../projects/ng_bds/bc-table/bc-table-directives/bc-cell.directive.ts","../../../projects/ng_bds/bc-table/bc-table-empy-container/bc-table-empy-container.component.ts","../../../projects/ng_bds/bc-table/bc-table.module.ts","../../../projects/ng_bds/bc-table/bancolombia-design-system-web-bc-table.ts"],"sourcesContent":["import { Component } from \"@angular/core\";\n\n@Component({\n  selector: 'bc-table-content',\n  template: `\n    <div class=\"bc-table-content\">\n      <ng-content></ng-content>\n    </div>\n  `,\n})\nexport class BcTableContentComponent {\n}\n","import { AfterViewInit, Component, ContentChild, EventEmitter, Input, Output } from '@angular/core';\nimport {\n  BcTableActionButton,\n  BcTableOptionMenu,\n} from '@bancolombia/design-system-behaviors';\nimport { BcPaginatorComponent } from '@bancolombia/design-system-web/bc-paginator';\n\n@Component({\n  selector: 'bc-table-header',\n  templateUrl: './bc-table-header.component.html',\n})\nexport class BcTableHeaderComponent implements AfterViewInit{\n  /**\n   * Título de la tabla, este puede tomar cualquier valor string, por defecto es 'Título de la tabla'.\n   *\n   * @memberof BcTableHeaderComponent\n   */\n  @Input() title = 'Título de la tabla';\n  /**\n   * Texto o label que se muestra en el botón de acción cuando la tabla es de tipo selección,\n   * este se visualiza cuando algunas de las filas es seleccionada. Por defecto es 'Acción'.\n   *\n   * @memberof BcTableHeaderComponent\n   */\n  @Input() actionsSelections: BcTableActionButton[] = [];\n  /**\n   * Texto o label que se muestra en el botón de acción cuando la tabla es de tipo selección,\n   * este se visualiza cuando algunas de las filas es seleccionada. Por defecto es 'Acción'.\n   *\n   * @memberof BcTableHeaderComponent\n   */\n  @Input() menuOptions: BcTableOptionMenu[] = [];\n  /**\n   * Evento de salida para cuando se da click a algunas de las acciones del header en modo selección.\n   *\n   * @type {EventEmitter<any>}\n   * @memberof BcTableHeaderComponent\n   */\n  @Output() actionClicked: EventEmitter<any> = new EventEmitter();\n  /**\n   * content que hace referencia al paginador alojado dentro del header\n   * @memberof BcTableHeaderComponent\n   */\n  @ContentChild(BcPaginatorComponent) content: BcPaginatorComponent;\n\n  ngAfterViewInit(): void {\n    this.getPaginator();\n  }\n  /**\n   * metodo para obtener la referencia del paginador sino lo encuentra\n   * lo retorna como undefined\n   * @returns paginador o undefined \n   */\n  public getPaginator(){\n    if (this.content!== undefined) {\n      return this.content.bcPaginatorBehavior;\n    }\n    return undefined;\n  }\n}\n","<div class=\"bc-table-header-top\">\n  <h6 class=\"bc-table-header-top-title\">{{ title }}</h6>\n  <div class=\"bc-table-header-top-right-container\">\n    <div class=\"bc-table-actions-container\">\n      <div class=\"bc-table-paginator-container\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Directive, ElementRef, Input, AfterViewInit } from '@angular/core';\n\n@Directive({\n  selector: '[bc-table]',\n})\nexport class BcTableDirective implements AfterViewInit {\n  /**\n   * Permite indicar si la tabla va a tener celdas para la selección de filas\n   * Si el valor es true, entonces se inicializa el comportamiento para los checkbox\n   * Por defecto es false.\n   *\n   * @memberof BcTableDirective\n   */\n  @Input() selection = false;\n  /**\n   * Permite indicar si la tabla será de tipo scroll, es decir, con columna fija y se puedan mostrar/ocultar columnas\n   * Si el valor es true, entonces se pinta en la parte superior derecha el ícono de setting y se agrega la clase\n   * Por defecto es false.\n   *\n   * @memberof BcTableDirective\n   */\n  @Input() scroll = false;\n  /**\n   * Permite indicar si la tabla será de tipo accordion, con contenedor vacio\n   *\n   * @memberof BcTableDirective\n   */\n  @Input() accordionEmpty = false;\n  /**\n   * Permite indicar si la tabla se podrá ordenar por columna\n   *\n   * @memberof BcTableDirective\n   */\n  @Input() sort = false;\n  /**\n   * Permite indicar si la tabla tiene acciones dropdown\n   *\n   * @memberof BcTableDirective\n   */\n  @Input() dropdownActions = false;\n  /**\n   * Permite indicar si la tabla tiene dropdowns en inicializados en el html\n   *\n   * @memberof BcTableDirective\n   */\n  @Input() dropdownHtml = false;\n  /**\n   * Permite indicar si la tabla tiene acciones en fila\n   *\n   * @memberof BcTableDirective\n   */\n  @Input() inlineActions = false;\n  /**\n   * Permite indicar si la no debería de ocultar los paginadores al momento de hacer una selección\n   *\n   * @memberof BcTableDirective\n   */\n  @Input() isNotHidePaginator = false;\n  /**\n   * Hace referencia al elemento sobre el cual actúa la directiva.\n   *\n   * @type {ElementRef}\n   * @memberof BcTableDirective\n   */\n  @Input() pairPaginators = false;\n  /**\n   * Hace referencia al elemento sobre el cual actúa la directiva.\n   *\n   * @type {ElementRef}\n   * @memberof BcTableDirective\n   */\n  element: ElementRef;\n  constructor(el: ElementRef) {\n    this.element = el;\n    this.element.nativeElement.classList.add('bc-table');\n  }\n  ngAfterViewInit(): void {\n    if (this.selection) {\n      this.element.nativeElement.classList.add('bc-table-selection');\n    }\n    if (this.scroll) {\n      this.element.nativeElement.classList.add('bc-table-scroll');\n    }\n    if (this.accordionEmpty) {\n      this.element.nativeElement.classList.add('bc-table-empy-accordion');\n    }\n    if (this.sort) {\n      this.element.nativeElement.classList.add('bc-table-sort');\n    }\n    if (this.dropdownActions) {\n      this.element.nativeElement.classList.add('bc-table-action-cell-dropdown');\n    }\n    if (this.inlineActions) {\n      this.element.nativeElement.classList.add('bc-table-action-cell-inline');\n    }\n    if (this.dropdownHtml) {\n      this.element.nativeElement.classList.add('bc-table-action-cell-dropdown-html');\n    }\n    if (this.isNotHidePaginator) {\n      this.element.nativeElement.classList.add('bc-table-not-hide-paginators');\n    }\n  }\n}\n","import { Component, ContentChild, Input } from '@angular/core';\nimport { BcPaginatorComponent } from '@bancolombia/design-system-web/bc-paginator';\n\n@Component({\n  selector: 'bc-table-footer',\n  templateUrl: './bc-table-footer.component.html',\n})\nexport class BcTableFooterComponent {\n  /**\n   * Array con los valores totales que se muestran en el footer de la tabla.\n   *\n   * @type {Array<BcTableTotalAmount>}\n   * @memberof BcTableFooterComponent\n   */\n  @Input() totalAmounts: Array<BcTableTotalAmount> = [];\n  /**\n   * content que hace referencia al paginador alojado dentro del header\n   *  @memberof BcTableFooterComponent\n   */\n  @ContentChild(BcPaginatorComponent) content: BcPaginatorComponent;\n\n  ngAfterViewInit(): void {\n    this.getPaginator();\n  }\n  /**\n   * metodo para obtener la referencia del paginador sino lo encuentra\n   * lo retorna como undefined\n   * @returns paginador o undefined \n   */\n  public getPaginator(){\n    if (this.content!== undefined) {\n      return this.content.bcPaginatorBehavior;\n    }\n    return undefined;\n  }\n}\n/**\n * Interfaz de los valores totales.\n *\n * @export\n * @interface BcTableTotalAmount\n */\nexport interface BcTableTotalAmount {\n  title?: string;\n  amount?: string;\n}\n","<div class=\"bc-table-footer\">\n  <div class=\"bc-table-footer-container\">\n    <div class=\"bc-table-footer-total-container\" *ngIf=\"totalAmounts.length > 0\">\n      <div class=\"bc-table-footer-total-column\" *ngFor=\"let item of totalAmounts\">\n        <p class=\"bc-table-footer-total-column-title\">{{item.title}}</p>\n        <h6 class=\"bc-table-footer-total-column-value\">{{item.amount}}</h6>\n      </div>\n    </div>\n    <div class=\"bc-table-footer-subcontainer\">\n      <div class=\"bc-table-actions-container\">\n        <div class=\"bc-table-paginator-container\">\n          <ng-content></ng-content>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { BcHelperService } from '@bancolombia/design-system-web/bc-helpers';\nimport {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  AfterViewInit,\n  ElementRef,\n  ViewChild,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { BcDropdownBehavior } from '@bancolombia/design-system-behaviors';\n@Component({\n  selector: 'bc-table-dropdown',\n  templateUrl: './bc-table-dropdown.component.html',\n})\nexport class BcTableDropdownComponent implements AfterViewInit, OnChanges {\n  /**\n   * Array con las opciones a mostrar en el submenú de opciones de cada fila.\n   * Este Array es de tipo Options, es decir, cada elemento del array debe llevar la siguiente estructura:\n   * {\n   *  id: string;\n   *  icon: string;\n   *  text: string;\n   * }\n   *\n   * @type {Array<Options>}\n   * @memberof BcTableDropdownComponent\n   */\n  @Input() options: Array<Options> = [];\n  /**\n   * Es la fila en la cual se encuentra el dropdown.\n   *\n   * @type {*}\n   * @memberof BcTableDropdownComponent\n   */\n  @Input() row: any = null;\n  /**\n   * Data personalizada por el usuario.\n   *\n   * @type {*}\n   * @memberof BcTableDropdownComponent\n   */\n  @Input() data: any;\n  /**\n   * Se emite cuando alguna de las opciones del dropdown es seleccionada,\n   * retornando el id de la opción y la respectiva fila.\n   *\n   * @type {EventEmitter<any>}\n   * @memberof BcTableDropdownComponent\n   */\n  @Output() onChange: EventEmitter<any> = new EventEmitter();\n  /**\n   * Id del dropdown, se genera aleatoreamente.\n   *\n   * @memberof BcTableDropdownComponent\n   */\n  dropdownId = this.bcHelperService.getId(this);\n  dropdownContent: HTMLElement;\n  @ViewChild('optionList') optionList: ElementRef;\n  @Output() changed: EventEmitter<any> = new EventEmitter();\n  constructor(private bcHelperService: BcHelperService) { }\n  ngAfterViewInit(): void {\n    this.overWriteClickEvent();\n    this.dropdownContent = document.getElementById(`BcDropdown_${this.dropdownId}`);\n  }\n\n  /**\n   * Update del behavior para el dropdown actual y clickItem\n   *\n   */\n  eventEnterDropdown() {\n    const dropBehavior = new BcDropdownBehavior();\n    dropBehavior.setElement(this.dropdownContent);\n    dropBehavior.setConfig({ isPopUp: true });\n    dropBehavior.setUp();\n    dropBehavior.toggleDropdown();\n    this.clickItem();\n  }\n\n  private overWriteClickEvent() {\n    if (this.optionList) {\n      for (const option of this.optionList.nativeElement.querySelectorAll('a')) {\n        const opt = option as HTMLElement;\n        opt.onclick = () => this.selectOption(opt.getAttribute('id'));\n      }\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes && !changes.options['firstChange']) {\n      setTimeout(() => {\n        this.overWriteClickEvent();\n        this.changed.emit();\n      });\n    }\n  }\n  /**\n   * Se ejecuta cuando se selecciona una opción y emite un evento con el id de la opción y la respectiva fila.\n   * @param optionId id del la opción seleccionada\n   */\n  selectOption(optionId: string): void {\n    this.onChange.emit({\n      optionSeleted: optionId,\n      rowData: this.row ? this.row : null,\n      customData: this.data ? this.data : null,\n    });\n  }\n\n  /**\n   * Busca las celdas de clase action para verificar que no se sobrepongan al dropdown\n   *\n   */\n  clickItem() {\n    const testElement = this.dropdownContent.parentNode.parentNode as HTMLElement;\n    const tableElement = testElement.parentNode.parentNode as HTMLElement;\n    const cells = Array.from(tableElement.getElementsByClassName('bc-table-fixed-action-cell')) as HTMLElement[];\n    cells.forEach(element => {\n      if (element == testElement) {\n        element.style.zIndex = '1';\n      } else {\n        element.style.zIndex = '0';\n      }\n    });\n  }\n}\n/**\n * Interfaz para las opciones del dropdown.\n *\n * @interface Options\n */\ninterface Options {\n  id?: string;\n  icon?: string;\n  text?: string;\n}\n","<div (keyup.enter)=\"eventEnterDropdown()\" (keyup.space)=\"eventEnterDropdown()\" tabindex=\"0\" class=\"bc-dropdown\"\n  id=\"BcDropdown_{{dropdownId}}\" [attr.aria-angular]=\"true\">\n  <em (click)=\"clickItem()\" class=\"bc-dropdown-toggle bc-icon bc-sm\" [attr.aria-controls]=\"dropdownId\">\n    secondary-menu\n  </em>\n  <div class=\"bc-dropdown-content\" [id]=\"dropdownId\">\n    <ul #optionList>\n      <li tabindex=\"0\" class=\"bc-dropdown-item\" *ngFor=\"let option of options\">\n        <a class=\"bc-link\" [id]=\"option.id\">\n          <em class=\"bc-icon bc-sm\">{{option.icon}}</em>\n          <span>{{option.text}}</span>\n        </a>\n      </li>\n    </ul>\n  </div>\n</div>\n","import { BcHelperService } from '@bancolombia/design-system-web/bc-helpers';\nimport {\n  BcTableScrollBehavior,\n  BcTableAccordionBehavior,\n  BcTableOptionMenu,\n  BcPaginatorBehavior,\n} from '@bancolombia/design-system-behaviors';\nimport {\n  Component,\n  Input,\n  AfterViewInit,\n  ContentChildren,\n  QueryList,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { BcTableHeaderComponent } from '../bc-table-header/bc-table-header.component';\nimport { BcTableDirective } from '../bc-table-directives/bc-table.directive';\nimport { BcTableFooterComponent } from '../bc-table-footer/bc-table-footer.component';\nimport { BcTableDropdownComponent } from '../bc-table-dropdown/bc-table-dropdown.component';\n\n@Component({\n  selector: 'bc-table-container',\n  template: `\n    <div class=\"bc-table-container\" [id]=\"componentId\">\n      <ng-content></ng-content>\n    </div>\n  `,\n})\nexport class BcTableContainerComponent implements AfterViewInit, OnChanges {\n  /**\n   * Id del componente, si este no se seteado entonces asigna uno aleatoriamente.\n   *\n   * @type {string}\n   * @memberof BcTableContainerComponent\n   */\n  @Input() componentId: string = this.bcHelperService.getId(this);\n  /**\n   * Hace referencia al header superior de la tabla.\n   *\n   * @type {QueryList<BcTableHeaderComponent>}\n   * @memberof BcTableContainerComponent\n   */\n  @ContentChildren(BcTableHeaderComponent) headerTop: QueryList<BcTableHeaderComponent>;\n  /**\n   * Hace referencia al header superior de la tabla.\n   *\n   * @type {QueryList<BcTableHeaderComponent>}\n   * @memberof BcTableContainerComponent\n   */\n  @ContentChildren(BcTableFooterComponent) footer: QueryList<BcTableFooterComponent>;\n  /**\n   * Comportamiento nativo.\n   *\n   * @type {BcTableScrollBehavior | BcTableAccordionBehavior}\n   * @memberof BcTableContainerComponent\n   */\n  bcTableBehavior: BcTableScrollBehavior | BcTableAccordionBehavior;\n\n  /**\n   * Array que se recorre en la tabla, es obligatorio asignarle valor para hacer que la tabla funcione al cambiar de página.\n   *\n   * @type {*}\n   * @memberof BcTableContainerComponent\n   */\n  @Input() dataTable: any = null;\n\n  @Input() tabActual: any = null;\n\n  @Input() tabValidate: boolean = false;\n  /**\n   * Se obtiene la tabla\n   *\n   * @type {QueryList<BcTableDirective>}\n   * @memberof BcTableContainerComponent\n   */\n  @ContentChildren(BcTableDirective, { descendants: true }) tableDirective: QueryList<BcTableDirective>;\n\n  /**\n   * lista de opciones para las celdas, pueden ser creadas como dropdowns\n   * o inline actions para cada una las filas\n   */\n  @Input() cellOptions: Array<BcTableOptionMenu> = [];\n  /**\n   * Dropdowns de la tabla\n   *\n   * @type {QueryList<BcTableDropdownComponent>}\n   * @memberof BcTableContainerComponent\n   */\n  @ContentChildren(BcTableDropdownComponent, { descendants: true }) dropdowns: QueryList<BcTableDropdownComponent>;\n\n  constructor(private bcHelperService: BcHelperService) { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes) {\n      if (changes['dataTable'] && !changes['tabActual']) {\n        if (changes['dataTable'].firstChange === false) {\n          this.reInit();\n        }\n      } else if (changes['tabActual'] && !changes['dataTable']) {\n        if (changes['tabActual'].firstChange === false) {\n          this.reInit();\n        }\n      } else if (changes['tabActual'] && changes['dataTable']) {\n        if (changes['tabActual'].firstChange === false && changes['dataTable'].firstChange === false) {\n          this.reInit();\n        }\n      }\n    }\n  }\n\n  ngAfterViewInit(): void {\n    if (this.dataTable === null) {\n      throw new Error(\"Falta setear el atributo 'dataTable' en bc-table-container\");\n    }\n    if (this.tableDirective.first.dropdownHtml) {\n      this.subscribeToDropdownChanges();\n    }\n    this.initTableBehavior();\n    if (this.tableDirective.first.dropdownHtml) {\n      this.dropdowns.changes.subscribe(() => {\n        this.subscribeToDropdownChanges();\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    for (const dropdown of this.dropdowns) {\n      dropdown.changed.unsubscribe();\n    }\n  }\n\n  /**\n   * Se inicializa el comportamiento nativo de la tabla segun el atributo scroll (opcional)\n   * para scroll=true -> se inicializa el comportamiento BcTableScrollBehavior\n   * para scroll=false -> se inicializa el comportamiento BcTableAccordionBehavior\n   *\n   * @private\n   * @memberof BcTableContainerComponent\n   */\n  private initTableBehavior() {\n    this.bcTableBehavior = this.tableDirective.first.scroll\n      ? new BcTableScrollBehavior()\n      : new BcTableAccordionBehavior();\n    let validateTabs: boolean = false;\n    if (this.tabValidate) {\n      validateTabs = this.validateTabs();\n    }\n    if (!validateTabs) {\n      this.setIdComponent(this.componentId);\n    }\n    this.headerTop.first && this.bcTableBehavior.setSelectionAction(this.headerTop.first.actionsSelections);\n    this.bcTableBehavior.angularFunction = this.onClickAction.bind(this);\n    if (this.tableDirective.first.dropdownActions || this.tableDirective.first.inlineActions) {\n      this.bcTableBehavior.setActionCell(this.cellOptions);\n    }\n    this.bcTableBehavior.setUp();\n    if (this.tableDirective.first.pairPaginators) {\n      this.pairPaginatorTable();\n    }\n  }\n\n  validateTabs() {\n    if (document.getElementsByClassName('bc-tab').length > 0) {\n      const tabContentActive: HTMLElement = document.getElementsByClassName('bc-tab-content active')[0] as HTMLElement;\n      if (tabContentActive.children.length > 0) {\n        if (tabContentActive.getElementsByTagName('bc-table-container').length > 0) {\n          const containerTable = tabContentActive.children[0].getElementsByTagName('bc-table-container')[0];\n          if (containerTable) {\n            if (containerTable.firstElementChild) {\n              const id = containerTable.firstElementChild.id\n              this.setIdComponent(id);\n            } else {\n              this.setIdComponent(this.componentId);\n            }\n          }\n          return true;\n        } else {\n          return false;\n        }\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Asigna a el behavior de la tabla el id \n   *\n   * @private\n   * @param {string} id \n   * @memberof BcTableContainerComponent\n   */\n  setIdComponent(id: string) {\n    this.bcTableBehavior.setId(id);\n  }\n\n  /**\n   * Se obitiene la(s) fila(s) seleccionada(s) y el id de la accion a la cual se le hizo click en la cabecera\n   * en modo selección\n   *\n   * @private\n   * @param {{ rowSelectedIndex: number[]; actionId: string }} response Esto lo devuelve el comportamiento\n   * @memberof BcTableContainerComponent\n   */\n  private onClickAction(response: { rowSelectedIndex: number[]; actionId: string }) {\n    this.headerTop.first &&\n      this.headerTop.first.actionClicked.emit({\n        rowsSelected: this.getRowSelectedFromData(response.rowSelectedIndex),\n        actionId: response.actionId,\n      });\n  }\n\n  /**\n   * Mapea la data las filas seleccionadas segun el index, para poder devolver la data real que se itera en la tabla\n   *\n   * @private\n   * @param {number[]} indexesRowSelected indice de filas seleccionadas\n   * @return {*}  {any[]}\n   * @memberof BcTableContainerComponent\n   */\n  private getRowSelectedFromData(indexesRowSelected: number[]): any[] {\n    let selected = [];\n    for (let i = 0; i < this.dataTable.length; i++) {\n      const rowData = this.dataTable[i];\n      if (indexesRowSelected.indexOf(i + 1) !== -1) {\n        selected.push(rowData);\n      }\n    }\n    return selected;\n  }\n\n  /**\n   * Reinicial el comportamiento de la tabla y cuando esta en modo scroll se borran las celdas (columna) fija\n   *\n   * @private\n   * @memberof BcTableContainerComponent\n   */\n  private reInit(): void {\n    if (this.tableDirective.first.scroll) {\n      const fixedCells = document.querySelectorAll('.bc-table-fixed-column-left');\n      if (fixedCells !== null && fixedCells.length > 0) {\n        this.removeCell(fixedCells);\n      }\n    }\n    else {\n      this.bcTableBehavior.closeCurrentExtraInfoRow();\n    }\n    setTimeout(() => {\n      this.initTableBehavior();\n    });\n  }\n\n  /**\n   * Elimina la celda fija\n   *\n   * @privates\n   * @param {NodeListOf<Element>} fixedCells\n   * @memberof BcTableContainerComponent\n   */\n  private removeCell(fixedCells: NodeListOf<Element>): void {\n    for (let i = 0; i < fixedCells.length; i++) {\n      const cell = fixedCells[i];\n      cell.remove();\n    }\n  }\n\n  /**\n   * Metodo que con el retorno de los paginadores empareja y permite que los\n   * paginadores se sincronicen\n   * @private\n   * @memberof BcTableContainerComponent\n   */\n  private pairPaginatorTable() {\n    const pagTop: BcPaginatorBehavior = this.headerTop.first.getPaginator();\n    const footerTop: BcPaginatorBehavior = this.footer.first.getPaginator();\n    if (pagTop !== undefined && footerTop !== undefined) pagTop.pairPaginator(footerTop);\n  }\n\n  /**\n   * Permite observar cuando alguno de los dropdowns cambia sus opciones para reiniciar el componente\n   *\n   * @private\n   * @memberof BcTableContainerComponent\n   */\n  private subscribeToDropdownChanges() {\n    for (const dropdown of this.dropdowns) {\n      dropdown.changed.subscribe(() => {\n        this.reInit();\n      });\n    }\n  }\n}\n","import { Directive, ElementRef, Input, AfterViewInit, EventEmitter, Output } from '@angular/core';\n\n@Directive({\n  selector: '[bc-cell]',\n})\nexport class BcCellDirective implements AfterViewInit {\n  /**\n   * Tipo de celda, esta puede tomar los valores: checkbox, number, action o total.\n   *\n   * @type {string}\n   * @memberof BcCellDirective\n   */\n  @Input() type: string;\n  /**\n   * Indica si la columna es favorita, es decir, aparecerá en la pantalla mobile, máximo 3 celdas.\n   *\n   * @type {boolean}\n   * @memberof BcCellDirective\n   */\n  @Input() favorite: boolean = false;\n  /**\n   * Indica si es la columna fija, es decir, será la primera columna a la izquerda con posición fija.\n   * Las demas filas quedan dentro un contenedor con scroll.\n   *\n   * @type {boolean}\n   * @memberof BcCellDirective\n   */\n  @Input() fixed: boolean = false;\n  /**\n   * Hace referencia al elemento en el cual actúa la directiva.\n   */\n  element: ElementRef;\n  @Output() changed: EventEmitter<any> = new EventEmitter();\n  constructor(el: ElementRef) {\n    this.element = el;\n  }\n  ngAfterViewInit(): void {\n    if (this.element.nativeElement.tagName === 'TH') {\n      this.setColumnType();\n      this.setFavoriteClass();\n      this.setFiexColumnClass();\n    } else {\n      this.setCellType();\n    }\n  }\n  /**\n   * Permite añadir la clase que indica el tipo de columna según el atributo type:\n   * Para type = 'number' la clase es bc-table-number-column.\n   *\n   * Por defecto la clase es bc-table-cell.\n   *\n   * @memberof BcCellDirective\n   */\n  setColumnType() {\n    switch (this.type) {\n      case 'number':\n        this.element.nativeElement.classList.add('bc-table-number-column');\n        break;\n      case 'action':\n        this.element.nativeElement.classList.add('bc-table-action-column');\n        break;\n      case 'total':\n        this.element.nativeElement.classList.add('bc-table-total-column');\n        break;\n      default:\n        this.element.nativeElement.classList.add('bc-table-column');\n        break;\n    }\n  }\n\n  /**\n   * Permite añadir la clase que indica el tipo de celda según el atributo type:\n   * Para type = 'number' la clase es bc-table-number-cell.\n   * Para type = 'total' la clase es bc-table-number-cell y bc-table-total-cell.\n   * Para type = 'text' la clase es bc-table-text-cell.\n   *\n   * Por defecto la clase es bc-table-cell.\n   *\n   * @memberof BcCellDirective\n   */\n  setCellType(): void {\n    switch (this.type) {\n      case 'number':\n        this.element.nativeElement.classList.add('bc-table-number-cell');\n        break;\n      case 'total':\n        this.element.nativeElement.classList.add('bc-table-number-cell', 'bc-total-cell');\n        break;\n      case 'text':\n        this.element.nativeElement.classList.add('bc-table-text-cell');\n        break;\n      case 'action':\n        this.element.nativeElement.classList.add('bc-table-action-cell');\n        break;\n      default:\n        this.element.nativeElement.classList.add('bc-table-cell');\n        break;\n    }\n  }\n  /**\n   * Permite asignar la clase que indica si la columna es favorita, es decir,\n   * se muestra en la tabla mobile.\n   *\n   * @memberof BcCellDirective\n   */\n  setFavoriteClass(): void {\n    if (this.favorite) {\n      this.element.nativeElement.classList.add('bc-table-favorite-column');\n    }\n  }\n  /**\n   * Permite asignar la clase que indica si la columna es favorita, es decir,\n   * se muestra en la tabla mobile.\n   *\n   * @memberof BcCellDirective\n   */\n  setFiexColumnClass(): void {\n    if (this.fixed) {\n      this.element.nativeElement.classList.add('bc-table-fixed-column');\n    }\n  }\n}\n","import { Component, ElementRef, ViewChild } from '@angular/core';\n\n@Component({\n  selector: '[bc-table-empty-container]',\n  template: `\n  <td>\n    <div class=\"bc-table-extra-info-row-content\">\n      <ng-content></ng-content>\n    </div>\n  </td>\n  `,\n})\nexport class BcTableEmptyContainerComponent {\n  @ViewChild('template', { static: true }) template;\n\n  element: ElementRef;\n  constructor(el: ElementRef) {\n    this.element = el;\n    this.element.nativeElement.classList.add('bc-table-extra-info-row');\n  }\n\n}\n","import { BcTableContentComponent } from './bc-table-content/bc-table-content.component';\nimport { BcTableHeaderComponent } from './bc-table-header/bc-table-header.component';\nimport { BcTableContainerComponent } from './bc-table-container/bc-table-container.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BcTableDirective } from './bc-table-directives/bc-table.directive';\nimport { BcCellDirective } from './bc-table-directives/bc-cell.directive';\nimport { BcTableFooterComponent } from './bc-table-footer/bc-table-footer.component';\nimport { BcTableEmptyContainerComponent } from './bc-table-empy-container/bc-table-empy-container.component';\nimport { BcTableDropdownComponent } from './bc-table-dropdown/bc-table-dropdown.component';\nimport { BcPaginatorModule } from '@bancolombia/design-system-web/bc-paginator';\n\n@NgModule({\n  declarations: [\n    BcTableContainerComponent,\n    BcTableHeaderComponent,\n    BcTableContentComponent,\n    BcTableDirective,\n    BcCellDirective,\n    BcTableFooterComponent,\n    BcTableDropdownComponent,\n    BcTableEmptyContainerComponent,\n  ],\n  imports: [CommonModule, BcPaginatorModule],\n  exports: [\n    BcTableContainerComponent,\n    BcTableHeaderComponent,\n    BcTableContentComponent,\n    BcTableDirective,\n    BcCellDirective,\n    BcTableFooterComponent,\n    BcTableDropdownComponent,\n    BcTableEmptyContainerComponent,\n  ],\n})\nexport class BcTableModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i2"],"mappings":"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"}