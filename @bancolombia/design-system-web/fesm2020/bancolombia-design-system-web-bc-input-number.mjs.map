{"version":3,"file":"bancolombia-design-system-web-bc-input-number.mjs","sources":["../../../projects/ng_bds/bc-input-number/bc-input-number.component.ts","../../../projects/ng_bds/bc-input-number/bc-input-number.component.html","../../../projects/ng_bds/bc-input-number/bc-input-number.module.ts","../../../projects/ng_bds/bc-input-number/bancolombia-design-system-web-bc-input-number.ts"],"sourcesContent":["import {\n  Component,\n  Input,\n  EventEmitter,\n  Output,\n  ElementRef,\n  OnChanges,\n  SimpleChanges,\n  Renderer2,\n  ViewChild,\n  AfterViewInit,\n  Optional,\n  Self,\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { BcInputNumberBehavior } from '@bancolombia/design-system-behaviors';\nimport { BcGeneralInputComponent } from '@bancolombia/design-system-web/bc-helpers';\n\nexport enum BcInputNumberStatus {\n  default = 'default',\n  error = 'error',\n  success = 'success'\n}\n\n/**\n * Componente input number\n *\n * @export\n * @class BcNumberInputComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'bc-input-number',\n  templateUrl: 'bc-input-number.component.html',\n})\nexport class BcInputNumberComponent extends BcGeneralInputComponent implements OnChanges, AfterViewInit {\n  /**\n   * Esta entrada de tipo string nos indica el valor mínimo por el cual el contador empezará.\n   *\n   *\n   * @type {string}\n   * @memberof BcNumberInputComponent\n   */\n  @Input() min = '0';\n  /**\n   * Esta entrada de tipo numérico nos indica cuánto tendría que aumentar o disminuír el contador.\n   *\n   * @type {number}\n   * @memberof BcNumberInputComponent\n   */\n  @Input() step: number;\n  /**\n   * Esta entrada de tipo numérico nos indica el valor inicial para el contador.\n   *\n   * @type {number}\n   * @memberof BcNumberInputComponent\n   */\n  @Input() initValue: number;\n\n  /**\n   * Esta entrada de tipo string nos indica el Label que tendría el contador, este puede venir desde un objeto de configuración o\n   * directamente en el atributo.\n   * @type {string}\n   * @memberof BcNumberInputComponent\n   */\n  @Input() label: string;\n\n  /**\n   * Esta entrada de tipo string nos permite indicar el hint que tendría el contador, este puede venir desde un objeto de configuración o\n   * directamente en el atributo.\n   * @type {string}\n   * @memberof BcNumberInputComponent\n   */\n  @Input() hint: string;\n\n  /**\n   * Esta entrada de tipo booleana nos indica si el componente es o no requerido en el contexto del formulario.\n   *\n   * @type {boolean}\n   * @memberof BcNumberInputComponent\n   */\n  @Input() required = true;\n\n  /**\n   * Esta entrada de tipo string nos indica el estado del componente, sus valores pueden ser : {'disabled', 'error', 'success', 'default'}\n   *\n   * @type {('disabled' | 'error' | 'success' | 'default')}\n   * @memberof BcInputNumberComponent\n   */\n  @Input() status: 'disabled' | 'error' | 'success' | 'default' = 'default';\n\n  /**\n   * Este parámetro nos indica una salida para el valor actual del selector numérico.\n   * @type {EventEmitter<number>}\n   * @memberof BcNumberInputComponent\n   */\n  @Output() updateValue = new EventEmitter<number>();\n\n  @ViewChild('inputNumber') bcInputNumber: ElementRef;\n\n  bcNumberInputBehavior;\n\n  constructor(@Self() @Optional() public controlDirective: NgControl, private ref: ElementRef, private render: Renderer2) {\n    super();\n    this.bcNumberInputBehavior = new BcInputNumberBehavior();\n    this.bcNumberInputBehavior.output = (value: number) => {\n      this.dispatchValue(value);\n    };\n    if (controlDirective) {\n      controlDirective.valueAccessor = this as BcGeneralInputComponent;\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.bcNumberInputBehavior.setElement(this.ref.nativeElement);\n    this.bcNumberInputBehavior.setUp();\n    this.detectStatusChanges();\n    this.validateErrorStatus()\n  }\n\n  validateErrorStatus() {\n    if (this.controlDirective && this.controlDirective.statusChanges) {\n      this.controlDirective.statusChanges.subscribe(status => {\n        if (status === 'INVALID') {\n          this.bcNumberInputBehavior.setErrorState(false)\n        } else {\n          this.bcNumberInputBehavior.setErrorState(true)\n        }\n      })\n    }\n  }\n\n  setDisabledState(isDisabled: boolean) {\n    if (this.bcNumberInputBehavior.numberInput) {\n      this.bcNumberInputBehavior.setDisabled(isDisabled);\n    }\n  }\n\n  setSuccessState(isSuccess: boolean) {\n    this.bcNumberInputBehavior.setSuccessState(isSuccess);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.detectStatusChanges(changes);\n  }\n\n  dispatchValue(value: number) {\n    this.onInput(value);\n    this.updateValue.emit(value);\n  }\n\n  onInput(value: number): void {\n    this.value = value;\n    this.onTouch();\n    this.onChange(this.value);\n    this.bcNumberInputBehavior.setValue(this.value);\n  }\n\n  writeValue(value: number) {\n    this.onInput(value)\n  }\n\n  detectStatusChanges(changes?: SimpleChanges): void {\n    if (changes) {\n      if (changes.status && this.bcInputNumber) {\n        this.setStatus();\n      }\n    } else {\n      this.setStatus();\n    }\n  }\n\n  setStatus() {\n    this.render.setAttribute(this.bcInputNumber.nativeElement, this.status, 'true');\n\n    if (this.status === BcInputNumberStatus.success) {\n      this.setSuccessState(true);\n    } else {\n      this.setSuccessState(false);\n    }\n  }\n}\n","<div class=\"bc-input-number\" #inputNumber>\n  <button class=\"button-decrease\">\n    <em class=\"bc-icon\" size=\"sm\" aria-hidden=\"true\" aria-label=\"Disminuir\">minus</em>\n  </button>\n  <div class=\"bc-input-number-container\">\n    <input type=\"number\" [attr.min]=\"min\" [attr.step]=\"step\" [attr.value]=\"value\"\n      [attr.required]=\"required ? true : null\" class=\"bc-input\" id=\"number1\" min=\"0\" type=\"number\" step=\"1\"\n      value=\"value\"/>\n    <label for=\"number1\">{{label}}</label>\n    <span>{{hint}}</span>\n  </div>\n  <button class=\"button-increase\">\n    <em class=\"bc-icon\" size=\"sm\" aria-hidden=\"true\" aria-label=\"Aumentar\">plus</em>\n  </button>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BcButtonModule } from '@bancolombia/design-system-web/bc-button';\nimport { BcIconModule } from '@bancolombia/design-system-web/bc-icon';\nimport { BcInputModule } from '@bancolombia/design-system-web/bc-input';\nimport { BcInputNumberComponent } from './bc-input-number.component';\n\n/**\n * Importa el componente input-number con\n * los diseños de Bancolombia S.A.\n *\n * @componente <bc-input-number></bc-input-number>\n *\n * @param  id ID personalizado del input (default: bc-toggle-input-1)\n * @param  disabled default: false\n * @param  required default: false\n * @param  isChecked default: false\n * @author: Bancolombia S.A\n */\n@NgModule({\n  declarations: [BcInputNumberComponent],\n  imports: [CommonModule, BcButtonModule, BcIconModule, BcInputModule],\n  exports: [BcInputNumberComponent],\n})\nexport class BcInputNumberModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}