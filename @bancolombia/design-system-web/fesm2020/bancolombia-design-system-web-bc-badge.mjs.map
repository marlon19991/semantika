{"version":3,"file":"bancolombia-design-system-web-bc-badge.mjs","sources":["../../../projects/ng_bds/bc-badge/bc-badge.component.ts","../../../projects/ng_bds/bc-badge/bc-badge.component.html","../../../projects/ng_bds/bc-badge/bc-badge.module.ts","../../../projects/ng_bds/bc-badge/bancolombia-design-system-web-bc-badge.ts"],"sourcesContent":["\nimport { Component, Input, SimpleChanges } from '@angular/core';\nimport { BcBadgeBehavior } from '@bancolombia/design-system-behaviors';\nimport { BcHelperService } from '@bancolombia/design-system-web/bc-helpers';\n\n\n/**\n * Importa las alertas con los diseños de Bancolombia S.A.\n * El componente badge representa un indicador de novedad sobre un elemento\n *\n * @export\n * @class BcBadgeComponent\n * @implements {AfterViewInit}\n */\n @Component({\n    selector: 'bc-badge',\n    templateUrl: 'bc-badge.component.html',\n    styles: [],\n  })\n\n\n  export class BcBadgeComponent  {\n\n     bcBadgeBehavior: BcBadgeBehavior;\n     elementId: string;\n     avatarElement: boolean=false;\n     iconElement: boolean=false;\n     numberNotifcation:string\n\n  /**\n   * Indica el id para el comportamiento del componente.\n   * @type {string}\n   * @memberof BcBadgeComponent\n   */\n\n  @Input() componentId: string = this.helper.getId(this);\n\n  /**\n  * Nombre del ícono.\n  * @type {string}\n  * @memberof BcBadgeComponent\n  */\n  @Input() icon: string = '';\n\n /**\n  * Tamaño del icono que contiene al badge.\n  * @type {('xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl' | '3xl' |)}\n  * @memberof BcBadgeComponent\n  */\n  @Input() sizeIcon : 'xs' | 'sm'| 'md'| 'lg'| 'xl'| '2xl'|'3xl' = 'xl';\n  \n /**\n  * Tamaño del avatar o imagen que contiene al badge.\n  * @type {('puffy' | 'small' |)}\n  * @memberof BcBadgeComponent\n  */\n  @Input() sizeAvatar : 'puffy' | 'small'| '' = 'small';\n\n /**\n  * Asigna las clases de borde en el badge.\n  * @type {boolean}\n  * @memberof BcBadgeComponent\n  */\n  @Input() border : boolean = false;\n\n /**\n  * Url de la imagen a visualizar\n  * @type {string}\n  * @memberof BcBadgeComponent\n  */\n  @Input() srcAvatar : string = '';\n   \n  /**\n  * Tamaño del badge.\n  * @type {('small' | 'medium' |)}\n  * @memberof BcBadgeComponent\n  */\n    @Input() sizeBadge : 'small' | 'medium'  = 'medium';\n\n /**\n  * Color del badge.\n  * @type {('red' | 'blue' | 'yellow' | 'green' | 'purple' | 'pink' |)}\n  * @memberof BcBadgeComponent\n  */\n    @Input() color : 'red' | 'blue'| 'yellow'| 'green'| 'purple'| 'pink' = 'red';\n  /**\n  * Posición del badge.\n  * @type {('button-left' | 'button-right' | 'top-right' | 'top-left' |)}\n  * @memberof BcBadgeComponent\n  */\n    @Input() position : 'button-left' | 'button-right'| 'top-right'| 'top-left' = 'button-right';\n\n  /**\n  * Muestra el número de notificaciones.\n  * @type {string}\n  * @memberof BcBadgeComponent\n  */\n    @Input() notification : string;\n    \n    constructor(private helper: BcHelperService) {\n        this.bcBadgeBehavior = new BcBadgeBehavior();\n        this.elementId = this.componentId + 'element';\n        this.avatarElement = false;\n        this.iconElement = false;\n      }\n  /**\n  * Configuracióon del componente despues de cargar la vista\n  * @type {void}\n  * @memberof BcBadgeComponent\n  */\n  ngAfterViewInit(): void {\n    this.bcBadgeBehavior.setId(this.componentId);   \n    this.bcBadgeBehavior.setUp();\n    this.bcBadgeBehavior.setPosition(this.position);\n    this.bcBadgeBehavior.setColor(this.color);\n    this.bcBadgeBehavior.setSize(this.sizeBadge);\n    this.bcBadgeBehavior.setBorder(this.border);\n    setTimeout(() => {\n      this.setTypeElement();\n    });\n  }\n  /**\n  * Configuración de las notificaciones cuando se detecta un cambio.\n  * @type {void}\n  * @memberof BcBadgeComponent\n  */\n  ngOnChanges(changes: SimpleChanges): void {\n    if(changes.notification){\n      this.numberNotifcation=this.bcBadgeBehavior.setNotification(this.sizeBadge,this.notification);\n        this.bcBadgeBehavior.setAnimation();\n    }\n  }\n\n /**\n  * Habilita el elemento complementario al badge, ya sea un ícono o un avatar.\n  * @type {void}\n  * @memberof BcBadgeComponent\n  */\n  setTypeElement(): void {\n    if(this.srcAvatar.length > 0){\n      this.avatarElement = true;\n      this.iconElement = false;\n    }else if(this.icon.length > 0){\n      this.iconElement = true;\n      this.avatarElement = false;\n    }\n    else{\n      this.avatarElement = false;\n      this.iconElement = false;\n    }\n  }\n}\n  \n","<article>\n  <section>\n    <div class=\"bc-badge-body\">\n      <bc-icon size=\"{{ sizeIcon }}\" aria-hidden=\"true\" *ngIf=\"iconElement\">\n        {{ icon }}\n      </bc-icon>\n      <img\n        bc-avatar\n        sizeAvatar=\"{{ sizeAvatar }}\"\n        src=\"{{ srcAvatar }}\"\n        alt=\"avatar\"\n        id=\"elementId\"\n        *ngIf=\"avatarElement\"\n      />\n      <p [id]=\"componentId\">{{ numberNotifcation }}</p>\n    </div>\n  </section>\n</article>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BcBadgeComponent } from './bc-badge.component';\nimport { BcAvatarModule } from '@bancolombia/design-system-web/bc-avatar';\nimport { BcIconModule } from '@bancolombia/design-system-web/bc-icon';\n\n\n@NgModule({\n  declarations: [BcBadgeComponent],\n  imports: [BcIconModule, CommonModule, BcAvatarModule],\n  exports: [BcBadgeComponent]\n})\nexport class BcBadgeModule { }\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}