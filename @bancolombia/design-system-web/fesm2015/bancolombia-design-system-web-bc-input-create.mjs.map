{"version":3,"file":"bancolombia-design-system-web-bc-input-create.mjs","sources":["../../../projects/ng_bds/bc-input-create/bc-input-create.component.ts","../../../projects/ng_bds/bc-input-create/bc-input-create.component.html","../../../projects/ng_bds/bc-input-create/bc-input-create.module.ts","../../../projects/ng_bds/bc-input-create/bancolombia-design-system-web-bc-input-create.ts"],"sourcesContent":["import { Component, Input, AfterViewInit, SimpleChanges } from '@angular/core';\nimport { BcInputCreateBehavior } from '@bancolombia/design-system-behaviors';\nimport { BcGeneralInputComponent } from '@bancolombia/design-system-web/bc-helpers';\nimport { BcHelperService } from '@bancolombia/design-system-web/bc-helpers';\n\n@Component({\n  selector: 'bc-input-create',\n  templateUrl: './bc-input-create.component.html'\n})\n\nexport class BcInputCreateComponent extends BcGeneralInputComponent implements AfterViewInit {\n  bcInputCreateBehavior: BcInputCreateBehavior;\n  constructor(private bcHelperService: BcHelperService) {\n    super();\n  }\n\n  /**\n   * Id del elemento.\n   * @type {string}\n   * @memberof BcInputCreateComponent\n   */\n  @Input() componentId: string = this.bcHelperService.getId(this);\n\n  /**\n   * Tipo del input: user, password, password-create, password-update\n   * @type {('user' | 'password' | 'password-create' | 'password-update' )}\n   * @memberof BcInputCreateComponent\n   */\n  @Input() type: 'user' | 'password' | 'password-create' | 'password-update' = 'password-update';\n\n  /**\n   * Asigna los condicionales que tendrá el input para modificar o crear la clave.\n   * Las condiciones se agregan en orden, si primero va maxLenght, este aparecera primero.\n   * @type {JSON} Se debe ingresar un texto con estructura de json.\n   * @memberof BcInputCreateComponent\n   */\n  @Input() conditionals: string = `{\"maxLength\": {\"description\":\"Entre 8 y 20 caracteres\", \"max\":20, \"min\":8 },\n    \"capitalLetters\": {\"description\":\"Por lo menos una mayuscula\",\"type\":\"uppercase\" },\n    \"someNumbers\": {\"description\":\"Por lo menos un numero\", \"numbers\":1 },\n    \"initialCharacter\": {\"description\":\"Debe iniciar con una letra\",\"type\":\"character\"},\n    \"specialCharacter\": {\"description\":\"debe contener un caracter especial\",\"condition\":true},\n    \"consecutiveNumbers\": {\"description\":\"no puede contener 3 numeros consecutivos\", \"max\":3, \"ascAndDesc\":true}}`;\n\n  /**\n   * Contenido del texto de soporte que tendra el dropdown\n   * @type {string}\n   * @memberof BcInputCreateComponent\n   */\n  @Input() supportText: string;\n\n  /**\n   * Titulo del dropdown\n   * @type {string}\n   * @memberof BcInputCreateComponent\n   */\n  @Input() title: string = \"La clave debe contener\";\n\n  /**\n   * Icono con el que contará el primer input, correspondiente al espacio del current password\n   * @type {string}\n   * @memberof BcInputCreateComponent\n   */\n  @Input() firstIcon: string = 'user';\n\n  /**\n   * Icono con el que contará el segundo input, correspondiente al espacio del new password\n   * @type {string}\n   * @memberof BcInputCreateComponent\n   */\n  @Input() secondIcon: string = 'user';\n\n  /**\n   * Icono con el que contará el tercer input, correspondiente al espacio del validation password\n   * @type {string}\n   * @memberof BcInputCreateComponent\n   */\n  @Input() thirdIcon: string = 'user';\n\n  /**\n   * Identificador del primer input, correspondiente al current password\n   * @type {string}\n   * @memberof BcInputCreateComponent\n   */\n  @Input() firstIdInput: string = 'firstId';\n\n  /**\n   * Identificador del segundo input, correspondiente al new password\n   * @type {string}\n   * @memberof BcInputCreateComponent\n   */\n  @Input() secondIdInput: string = 'secondId';\n\n  /**\n   * Identificador del tercer input, correspondiente al validation password\n   * @type {string}\n   * @memberof BcInputCreateComponent\n   */\n  @Input() thirdIdInput: string = 'thirdId';\n\n  /**\n   * Texto auxiliar con el que contará el primer input, correspondiente al espacio del current password\n   * @type {string}\n   * @memberof BcInputCreateComponent\n   */\n  @Input() firstLabel: string = 'Clave';\n\n  /**\n   * Texto auxiliar con el que contará el segundo input, correspondiente al espacio del new password\n   * @type {string}\n   * @memberof BcInputCreateComponent\n   */\n  @Input() secondLabel: string = 'Nueva Clave';\n\n  /**\n   * Texto auxiliar con el que contará el tercer input, correspondiente al espacio del validation password\n   * @type {string}\n   * @memberof BcInputCreateComponent\n   */\n  @Input() thirdLabel: string = 'Confirmacion Clave';\n\n  /**\n   * Texto de error con el que contará el primer input, correspondiente al espacio del current password\n   * @type {string}\n   * @memberof BcInputCreateComponent\n   */\n  @Input() firstMsgError: string = \"La clave no cumple con los requerimientos necesarios\";\n\n  /**\n   * Texto de error con el que contará el segundo input, correspondiente al espacio del new password\n   * @type {string}\n   * @memberof BcInputCreateComponent\n   */\n  @Input() secondMsgError: string = \"La clave no cumple con los requerimientos necesarios\";\n\n  /**\n   * Texto de error con el que contará el tercer input, correspondiente al espacio del validation password\n   * @type {string}\n   * @memberof BcInputCreateComponent\n   */\n  @Input() thirdMsgError: string = \"Las claves no coinciden\";\n\n  /**\n   * Enmascaramiento de la clave inicializado en verdadero\n   * @type {boolean}\n   * @memberof BcInputCreateComponent\n   */\n  @Input() mask: boolean = true;\n\n  /**\n  * Icono del título del dropdown\n  * @type {string}\n  * @memberof BcInputCreateComponent\n  */\n  @Input() titleIcon: string = 'lock';\n\n  /**\n   * Estatus que indica si se habilita o deshabilita el componente\n   * @type {boolean}\n   * @memberof BcInputCreateComponent\n   */\n  @Input() disableStatus: boolean = false;\n  /**\n   * Indica si es el primer cambio del componente\n   * @type {boolean}\n   * @memberof BcInputCreateComponent\n   */\n  firstChange: boolean = false;\n  /**\n   * Indica cambios generados en el componente\n   * @memberof BcInputCreateComponent\n   * @param {SimpleChanges} changes\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.firstChange) {\n      setTimeout(() => {\n        this.initInputCreateBehavior();\n      })\n    }\n  }\n  /**\n   * Acciones a realizar despues de cargar la vista del componente\n   * @memberof BcInputCreateComponent\n   */\n  ngAfterViewInit(): void {\n    this.initInputCreateBehavior();\n  }\n  /**\n   * Inicializa el comportamiento del input-create\n   */\n  initInputCreateBehavior(): void {\n    this.bcInputCreateBehavior = new BcInputCreateBehavior();\n    this.bcInputCreateBehavior.setId(this.componentId);\n    this.bcInputCreateBehavior.setUp();\n    this.firstChange = true;\n  }\n}\n","<section class=\"bc-input-create\" [attr.id]=\"componentId\" [attr.disableStatus]=\"disableStatus\" [attr.firstIdInput]=\"firstIdInput\" [attr.secondIdInput]=\"secondIdInput\"\n    [attr.thirdIdInput]=\"thirdIdInput\" [attr.type]=\"type\" [attr.supportText]=\"supportText\" [attr.title]=\"title\"\n    [attr.firstIcon]=\"firstIcon\" [attr.secondIcon]=\"secondIcon\" [attr.thirdIcon]=\"thirdIcon\"\n    [attr.firstLabel]=\"firstLabel\" [attr.secondLabel]=\"secondLabel\" [attr.thirdLabel]=\"thirdLabel\"\n    [attr.firstMsgError]=\"firstMsgError\" [attr.secondMsgError]=\"secondMsgError\" [attr.thirdMsgError]=\"thirdMsgError\"\n    [attr.mask]=\"mask\" [attr.titleIcon]=\"titleIcon\" [attr.conditionals]=\"conditionals\">\n</section>","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BcInputCreateComponent } from './bc-input-create.component';\nimport { BcIconModule } from '@bancolombia/design-system-web/bc-icon';\nimport { BcInputModule } from '@bancolombia/design-system-web/bc-input';\nimport { BcHelperService } from '@bancolombia/design-system-web/bc-helpers';\n\n@NgModule({\n  declarations: [BcInputCreateComponent],\n  imports: [CommonModule,BcIconModule, BcInputModule],\n  providers: [BcHelperService],\n  exports: [BcInputCreateComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class BcInputCreateModule {}","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}