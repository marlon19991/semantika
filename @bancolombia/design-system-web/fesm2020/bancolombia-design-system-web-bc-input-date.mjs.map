{"version":3,"file":"bancolombia-design-system-web-bc-input-date.mjs","sources":["../../../projects/ng_bds/bc-input-date/bc-input-date.component.ts","../../../projects/ng_bds/bc-input-date/bc-input-date.component.html","../../../projects/ng_bds/bc-input-date/bc-input-date.module.ts","../../../projects/ng_bds/bc-input-date/bancolombia-design-system-web-bc-input-date.ts"],"sourcesContent":["import {\n  AfterViewInit,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Optional,\n  Output,\n  Self,\n} from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { BcInputDateBehavior } from '@bancolombia/design-system-behaviors';\nimport { BcHelperService, BcGeneralInputComponent } from '@bancolombia/design-system-web/bc-helpers';\n\n/**\n * Componente rango de fechas.\n *\n * @export\n * @class BcInputDateComponent\n * @implements {OnInit}\n * @implements {AfterViewInit}\n */\n@Component({\n  selector: 'bc-input-date',\n  templateUrl: './bc-input-date.component.html',\n})\nexport class BcInputDateComponent extends BcGeneralInputComponent implements OnInit, AfterViewInit, ControlValueAccessor {\n  element;\n  holidaysParse;\n  disabled;\n  /**\n   * Id del componente.\n   *\n   * @memberof BcInputDateComponent\n   */\n  @Input() componentId = this.bcHelperService.getId(this);\n\n  /**\n   * Esta entrada de tipo string nos indica el tipo de calendario, puede ser simple o puede ser de tipo split.\n   *\n   * @type {string}\n   * @memberof BcCalendarComponent\n   */\n  @Input() type: string;\n\n  /**\n   * Esta entrada de tipo string nos indica la fecha minima seleccionable del calendario.\n   *\n   * @type {string}\n   * @memberof BcCalendarComponent\n   */\n  @Input() minDate: string;\n\n  /**\n   * Esta entrada de tipo string nos indica la fecha maxima seleccionable del calendario.\n   *\n   * @type {string}\n   * @memberof BcCalendarComponent\n   */\n  @Input() maxDate: string;\n\n  /**\n   * Esta entrada de tipo string nos indica el tipo de calendario, puede ser simple o puede ser de tipo split.\n   *\n   * @type {string}\n   * @memberof BcCalendarComponent\n   */\n  @Input() CalendarButton: string;\n\n  /**\n   * Esta entrada de tipo string nos indica el tipo de calendario, puede ser simple o puede ser de tipo split.\n   *\n   * @type {string}\n   * @memberof BcCalendarComponent\n   */\n  @Input() CalendarFilter: string;\n\n  /**\n   * Esta entrada de tipo string nos indica el tipo de calendario, puede ser simple o puede ser de tipo split.\n   *\n   * @type {string}\n   * @memberof BcCalendarComponent\n   */\n  @Input() CalendarHoliday: string;\n  /**\n  * Esta entrada de tupo string permite ver el formato de la fecha ya sea DD/MM/YY o solo mes y año o solo año.\n  * por lo cual el type del INPUT tambien cambia dependiendo este tipo de dato siendo de tipo date si es fullDate y siendo\n  * de tipo string si es mediumDate o shortDate\n  * @type {('fullDate' | 'mediumDate' | 'shortDate')}\n  * @memberof BcCalendarComponent\n  */\n  @Input() formatDate: 'fullDate' | 'mediumDate' | 'shortDate';\n\n  /**\n    * Validar el input automaticamente.\n    *\n    * @memberof BcInputDateComponent\n    */\n  @Input() validateInput: string;\n\n  /**\n    * Mensaje de error input.\n    *\n    * @memberof BcInputDateComponent\n    */\n  @Input() errorText: string;\n\n  /**\n    * Mensaje success input.\n    *\n    * @memberof BcInputDateComponent\n    */\n  @Input() successText: string;\n\n  /**\n    * Lenguaje actual del componente\n    *\n    * @memberof BcInputDateComponent\n    */\n  @Input() language: string;\n\n  /**\n   * Esta entrada de tipo string define los dias festivos del calendario\n   *\n   * @type {{ month: number, day: number }[]}\n   * @memberof BcInputDateComponent\n   */\n  @Input() holidayDates: { month: number, day: number }[] = [];\n\n  /**\n   *\n   *\n   * @memberof BcInputDateComponent\n   */\n  @Output() updateValue = new EventEmitter<number>();\n\n  constructor(@Self() @Optional() public controlDirective: NgControl, private bcHelperService: BcHelperService) {\n    super();\n    this.element = new BcInputDateBehavior();\n    this.element.output = (value: any) => {\n      this.dispatchValue(value);\n    };\n    if (controlDirective) {\n      controlDirective.valueAccessor = this as BcGeneralInputComponent;\n    }\n  }\n  ngOnInit() {\n    this.holidaysParse = JSON.stringify(this.holidayDates);\n  }\n\n  ngAfterViewInit() {\n    this.element.setId(this.componentId);\n    this.element.setUp();\n  }\n\n  dispatchValue(value: any): void {\n    this.onInput(value);\n    this.updateValue.emit(this.value);\n  }\n\n  onInput(value: any): void {\n    this.value = value;\n    this.onTouch();\n    this.onChange(this.value);\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    if (this.element.inputDate) {\n      this.element.inputDate.disabled = this.disabled;\n    }\n  }\n\n  writeValue(value) {\n    if (!this.element.inputDate) {\n      return;\n    }\n    if (value) {\n      this.value = value;\n      this.element.inputDate.value = this.value;\n      const event = new Event('focusout');\n      this.element.inputDate.dispatchEvent(event);\n    } else {\n      this.element.setDefaultStatusInput(false);\n    }\n  }\n\n  /**\n    * Cambia la clase del input a success.\n    *\n    * @memberof BcInputDateComponent\n    */\n  suceessClassActive() {\n    this.element.successInputUpdateClass();\n  }\n\n  /**\n    * Cambia la clase del input a su estado por defecto.\n    *\n    * @memberof BcInputDateComponent\n    */\n  defaultClassActive() {\n    this.element.setDefaultStatusInputClass();\n  }\n}\n","<div\n  [id]=\"componentId\"\n  class=\"bc-input-date bc-w-100\"\n  [attr.min]=\"minDate\"\n  [attr.max]=\"maxDate\"\n  [attr.validateInput]=\"validateInput\"\n  [attr.errorText]=\"errorText\"\n  [attr.successText]=\"successText\"\n  [attr.language]=\"language\"\n  [attr.formatDate]=\"formatDate\"\n  [attr.CalendarButton]=\"CalendarButton\"\n  [attr.CalendarFilter]=\"CalendarFilter\"\n  [attr.type]=\"type\"\n  [attr.holidayDates]=\"holidaysParse\">\n  <ng-content></ng-content>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BcInputDateComponent } from './bc-input-date.component';\nimport { BcInputModule } from '@bancolombia/design-system-web/bc-input';\n\n/**\n * Importa el componente bcInputDate con\n * los diseños de Bancolombia S.A.\n *\n * @componente <bc-input-date></bc-input-date>\n * @param componentId: string de id de html\n * IMPORTANTE: Este componente debe tener 2 input en su interior\n *\n *\n * @author: Bancolombia S.A\n */\n\n@NgModule({\n  declarations: [BcInputDateComponent],\n  imports: [CommonModule, BcInputModule],\n  exports: [BcInputDateComponent],\n})\nexport class BcInputDateModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}