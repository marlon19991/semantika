{"version":3,"file":"bancolombia-design-system-web-bc-notification.mjs","sources":["../../../projects/ng_bds/bc-notification/bc-notification.service.ts","../../../projects/ng_bds/bc-notification/bc-notification.component.ts","../../../projects/ng_bds/bc-notification/bc-notification.component.html","../../../projects/ng_bds/bc-notification/bc-notification.module.ts","../../../projects/ng_bds/bc-notification/bancolombia-design-system-web-bc-notification.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BcNotificationService {\n}\n","import { Component, AfterViewInit, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { BcNotificationBehavior } from '@bancolombia/design-system-behaviors';\nimport { BcHelperService } from '@bancolombia/design-system-web/bc-helpers';\nimport { BcDialog } from '@bancolombia/design-system-web/bc-services';\n\n/**\n * Importa las Notificaciones con los diseños de Bancolombia S.A.\n *\n * @export\n * @class BcNotificationsComponent\n * @implements {AfterViewInit}\n */\n@Component({\n  selector: 'bc-notification',\n  templateUrl: 'bc-notification.component.html',\n  styles: [],\n})\nexport class BcNotificationComponent extends BcDialog implements AfterViewInit, OnInit {\n  /**\n   * Comportamiento\n   *\n   * @type {BcNotificationBehavior}\n   * @memberof BcNotificationsComponent\n   */\n  bcNotificationBehavior: BcNotificationBehavior;\n  icon = '';\n  /**\n   * Tipos de iconos\n   *\n   * @memberof BcNotificationsComponent\n   */\n  icons = {\n    error: 'error',\n    success: 'check',\n    info: 'info',\n    warning: 'exclamation',\n    inactive: 'info',\n  };\n   /**\n   * Titulo de la notificacion\n   *\n   * @memberof BcNotificationsComponent\n   */\n  @Input() title = '';\n  /**\n   * Texto de la notificacion\n   *\n   * @memberof BcNotificationsComponent\n   */\n  @Input() text = '';\n  /**\n   * Tipo de notificacion [ 'error' | 'success' | 'info' | 'warning' | 'inactive' (default) ]\n   *\n   * @type {string}\n   * @memberof BcNotificationsComponent\n   */\n  @Input() type = 'inactive';\n  /**\n   * Id del componente\n   *\n   * @type {string}\n   * @memberof BcNotificationsComponent\n   */\n  @Input() id: string = this.helper.getId(this);\n  /**\n   * Indica si la notificacion es fija\n   *\n   * @type {boolean}\n   * @memberof BcNotificationsComponent\n   */\n  fixed = true;\n  /**\n   * Tiempo de cerrado de la notificacion\n   *\n   * @type {number}\n   * @memberof BcNotificationsComponent\n   */\n  timeOut = 0;\n  /**\n   * Indica si la notificacion es estática ó inline\n   *\n   * @type {boolean}\n   * @memberof BcNotificationsComponent\n   */\n  @Input() inline = false;\n  /**\n   * Indica si la notificacion es estática se puede descartar o cerrar\n   *\n   * @type {boolean}\n   * @memberof BcNotificationsComponent\n   */\n  @Input() dismissible = false;\n  /**\n   * Se ejecuta cuando la notificacion es cerrada, aplica solo para notificacions inline\n   *\n   * @type {EventEmitter<any>}\n   * @memberof BcNotificationsComponent\n   */\n  @Output() onclose: EventEmitter<any> = new EventEmitter();\n  /**\n   * Indica el elemento de referencia para insertar la notificacion\n   *\n   * @type {EventEmitter<any>}\n   * @memberof BcNotificationsComponent\n   */\n  elementRef = '';\n\n  constructor(private helper: BcHelperService) {\n    super();\n    this.bcNotificationBehavior = new BcNotificationBehavior();\n  }\n\n  ngOnInit(): void {\n    this.fixed = this.inline || this.elementRef !== '' ? false : true;\n  }\n\n  ngAfterViewInit(): void {\n    if (this.inline) {\n      this.bcNotificationBehavior.setId(this.id);\n      this.bcNotificationBehavior.onClose((event) => {\n        this.onclose.emit(event);\n      });\n      this.bcNotificationBehavior.setUp();\n    }\n    setTimeout(() => {\n      this.setIconByType();\n    });\n  }\n  /**\n   * Validar icono según tipo de notificacion\n   *\n   * @memberof BcNotificationsComponent\n   */\n  setIconByType() {\n    this.icon = this.icons[this.type]\n      ? this.icons[this.type]\n      : this.icons.inactive;\n  }\n  /**\n   * Atributos de la notificacion\n   *\n   * @param {*} inputs\n   * @memberof BcNotificationsComponent\n   */\n  onInjectInputs(inputs: any): void {\n    this.id = inputs.id;\n    this.type = inputs.type;\n    this.text = inputs.text;\n    this.timeOut = inputs.tiemout;\n    this.elementRef = inputs.elementRef;\n    this.closeByTimeout();\n  }\n  /**\n   * Cerrar notificacion\n   *\n   * @memberof BcNotificationsComponent\n   */\n  closeIt(): void {\n    if (!this.inline) {\n      this.close('saving');\n    }\n  }\n  /**\n   * Cancelar notificacion\n   *\n   * @memberof BcNotificationsComponent\n   */\n  cancelIt(): void {\n    this.dismiss('canceling');\n  }\n  /**\n   * Cerrar notificacion según timeout\n   *\n   * @memberof BcNotificationsComponent\n   */\n  closeByTimeout() {\n    if (this.timeOut && this.timeOut !== 0) {\n      this.bcNotificationBehavior.setTimeOut(this.timeOut);\n      setTimeout(() => {\n        this.close();\n      }, this.timeOut);\n    }\n  }\n}\n\n","<div\n  class=\"bc-notification-active bc-notification-{{ type }}\"\n  role=\"notification\"\n  [id]=\"id\"\n  [ngClass]=\"{\n    'bc-notification-fixed': fixed,\n    'bc-notification-inline': inline,\n    'bc-notification-dismissible': dismissible\n  }\"\n>\n  <div class=\"bc-notification-status\">\n    <em class=\"bc-icon\">{{ icon }}</em>\n  </div>\n  <div class=\"bc-notification-body\">\n    <h5 class=\"title\" [innerHTML]=\"title\"></h5>\n    <p class=\"text\" [innerHTML]=\"text\"></p>\n  </div>\n  <div class=\"bc-notification-close\">\n    <button\n      class=\"bc-close\"\n      role=\"button\"\n      tabindex=\"0\"\n      aria-pressed=\"false\"\n      (click)=\"closeIt()\"\n    >\n      <em aria-hidden=\"true\" class=\"bc-icon\">error</em>\n    </button>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BcNotificationComponent } from './bc-notification.component';\nimport { BcButtonModule } from '@bancolombia/design-system-web/bc-button';\nimport { BcIconModule } from '@bancolombia/design-system-web/bc-icon';\n\n/**\n * Importa las notificaciones con los diseños de Bancolombia S.A.\n * @param text Mensaje a mostrar en la notification\n * @param typeNotification Tipo de notification\n *\n * @description Notificacion para error\n * @example\n * <bc-notification class=\"bc-notifications-container\" text =\"Mensaje de error\" typeNotification='error'></bc-notification>\n *\n * @description Notificacion para éxito\n * @example\n * <bc-notification class=\"bc-notifications-container\" text =\"Mensaje de exito\" typeNotification='success'></bc-notification>\n *\n * @description Notificacion para información\n * @example\n * <bc-notification class=\"bc-notifications-container\" text =\"Mensaje de información\" typeNotification='info'></bc-notification>\n *\n * @description Notificacion para advertencia\n * @example\n * <bc-notification class=\"bc-notifications-container\" text =\"Mensaje de advertencia\" typeNotification='warning'></bc-notification>\n *\n * @description Notificacion para inactividad\n * @example\n * <bc-notification class=\"bc-notifications-container\" text =\"Mensaje de informativo\" typeNotification='inactive'></bc-notification>\n *\n * @author: Bancolombia S.A\n */\n\n@NgModule({\n  declarations: [BcNotificationComponent],\n  imports: [BcIconModule, BcButtonModule, CommonModule],\n  exports: [BcNotificationComponent],\n})\nexport class BcNotificationModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}