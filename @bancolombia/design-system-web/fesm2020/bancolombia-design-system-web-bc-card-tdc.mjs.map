{"version":3,"file":"bancolombia-design-system-web-bc-card-tdc.mjs","sources":["../../../projects/ng_bds/bc-card-tdc/constants/bc-card-tdc.constants.ts","../../../projects/ng_bds/bc-card-tdc/pipes/mask-card-number.pipe.ts","../../../projects/ng_bds/bc-card-tdc/pipes/format-amount.pipe.ts","../../../projects/ng_bds/bc-card-tdc/bc-card-tdc.component.ts","../../../projects/ng_bds/bc-card-tdc/bc-card-tdc.component.html","../../../projects/ng_bds/bc-card-tdc/bc-card-tdc.module.ts","../../../projects/ng_bds/bc-card-tdc/bancolombia-design-system-web-bc-card-tdc.ts"],"sourcesContent":["export enum CREDIT_CARD_FRANCHISES {\n  MASTERCARD = 'Mastercard',\n  AMERICAN_EXPRESS = 'American Express',\n  VISA = 'Visa',\n  MASTERCARD_MAESTRO = 'Mastercard Maestro'\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'maskCardNumber'\n})\nexport class MaskCardNumberPipe implements PipeTransform {\n  transform(\n    value: string,\n  ): string {\n    return `*${value.slice(-4)}`;\n  }\n}\n","import { CurrencyPipe } from '@angular/common';\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'formatAmount'\n})\nexport class FormatAmountPipe implements PipeTransform {\n\n  constructor(private currencyPipe: CurrencyPipe) {}\n\n  transform(\n    value: string,\n  ): {int: string, decimal: string} {\n    const [int, decimal] = (value.toString().split(',').join('').split('.').join(',')).split(',');\n    return {\n      int: (this.currencyPipe.transform(Math.trunc(+int), 'CUP', '', '0.0-0'))?.split(',').join('.'),\n      decimal: decimal || '00'\n    }\n  }\n}\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { BcCardTdcBehavior } from '@bancolombia/design-system-behaviors';\nimport { BcHelperService } from '@bancolombia/design-system-web/bc-helpers';\nimport { cardTdcStatusData } from './interfaces/bc-card-tdc-interfaces';\nimport { CREDIT_CARD_FRANCHISES } from './constants/bc-card-tdc.constants';\n\n@Component({\n  selector: 'bc-card-tdc',\n  templateUrl: './bc-card-tdc.component.html',\n})\n/**\n * Componente CardTdc\n * import { BcCardTdcComponent } from '@bancolombia/design-system-web/bc-card-tdc';\n * @export\n * @class BcCardTdcComponent\n */\nexport class BcCardTdcComponent implements AfterViewInit, OnChanges {\n  bcCardTdcBehavior: BcCardTdcBehavior;\n  element: ElementRef;\n\n  /**\n   *Id del elemento.\n   *\n   * @type {string}\n   * @memberof BcCardTdcComponent\n   */\n  @Input() componentId: string = this.bcHelperService.getId(this);\n\n  /**\n   * Tipo de card 'checkbox' o 'radio'\n   *\n   * @type {('checkbox' | 'radio')}\n   * @memberof BcCardTdcComponent\n   */\n  @Input() cardType: 'checkbox' | 'radio' = 'checkbox';\n\n  /**\n   * Nombre de la tarjeta\n   *\n   * @type {string}\n   * @memberof BcCardTdcComponent\n   */\n  @Input() cardName: string;\n\n  /**\n   * Número de la tarjeta\n   * Formato '*XXXX'\n   * @type {string}\n   * @memberof BcCardTdcComponent\n   */\n  @Input() cardNumber: string;\n\n  /**\n   * Pago mínimo\n   *\n   * @type {string}\n   * @memberof BcCardTdcComponent\n   */\n  @Input() minPayment: string;\n\n  /**\n   * Pago mínimo en dolares\n   *\n   * @type {string}\n   * @memberof BcCardTdcComponent\n   */\n  @Input() minUsdPayment?: string;\n\n  /**\n   * Nombre del logo\n   *\n   * @type {string}\n   * @memberof BcCardTdcComponent\n   */\n  @Input() logoName: string;\n\n  /**\n   * Fecha limite de pago\n   *\n   * @type {string}\n   * @memberof BcCardTdcComponent\n   */\n  @Input() dueDate: string;\n\n  /**\n   * Nombre de grupo de radiobuttons\n   *\n   * @type {string}\n   * @memberof BcCardTdcComponent\n   */\n  @Input() radioGroupName: string;\n\n  /**\n   * Indicador para mostrar o no abreviación de moneda cuando solo se tenga una deuda ( COP o USD )\n   *\n   * @type {boolean}\n   * @memberof BcCardTdcComponent\n   */\n  @Input() showCurrencyAbbreviation: boolean = false;\n\n  /**\n   * EventEmitter de\n   *\n   * @type {EventEmitter<cardTdcStatusData>}\n   * @memberof BcCardTdcComponent\n   */\n  @Output() selectedEmitter: EventEmitter<cardTdcStatusData> = new EventEmitter();\n\n  constructor(\n    private bcHelperService: BcHelperService,\n    el: ElementRef\n  ) {\n    this.element = el;\n    this.bcCardTdcBehavior = new BcCardTdcBehavior();\n  }\n\n  ngAfterViewInit(): void {\n    this.element.nativeElement.setAttribute('id', this.componentId);\n    this.bcCardTdcBehavior.setId(this.componentId);\n    this.bcCardTdcBehavior.setUp();\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.bcCardTdcBehavior.radioGroupName = changes.radioGroupName?.currentValue;\n  }\n\n  /**\n   * Función llamada cuando se da click en card, emite datos de la tarjeta\n   *\n   * @memberof BcCardTdcComponent\n   */\n  public selectCard(): void {\n    const cardInfo: cardTdcStatusData = {\n      cardName: this.cardName,\n      cardNumber: this.cardNumber,\n      minPayment: this.minPayment,\n      minUsdPayment: this.minUsdPayment,\n      dueDate: this.dueDate,\n      logoName: this.logoName,\n      elementId: this.componentId,\n      type: this.cardType,\n      radioGroupName: this.radioGroupName,\n      cardType: this.cardType\n    }\n    setTimeout(() => {\n      this.selectedEmitter.emit({...cardInfo, selected: this.bcCardTdcBehavior.isSelected});\n    });\n  }\n\n  /**\n   * Retorna franquicia bancaria  de la tarjeta según el numero\n   *\n   * @readonly\n   * @type {CREDIT_CARD_FRANCHISES}\n   * @memberof BcCardTdcComponent\n   */\n  get creditCardFranchise() : CREDIT_CARD_FRANCHISES {\n    const initialDigit = this.cardNumber\n      .split('')\n      .find((value) => value !== '0');\n    let franchises: CREDIT_CARD_FRANCHISES;\n    switch (initialDigit) {\n      case '2':\n        franchises = CREDIT_CARD_FRANCHISES.MASTERCARD;\n        break;\n      case '3':\n        franchises = CREDIT_CARD_FRANCHISES.AMERICAN_EXPRESS;\n        break;\n      case '4':\n        franchises = CREDIT_CARD_FRANCHISES.VISA;\n        break;\n      case '5':\n        franchises = CREDIT_CARD_FRANCHISES.MASTERCARD;\n        break;\n      case '6':\n        franchises = CREDIT_CARD_FRANCHISES.MASTERCARD_MAESTRO;\n        break;\n      default:\n        franchises = CREDIT_CARD_FRANCHISES.MASTERCARD;\n        break;\n    }\n    return franchises;\n  }\n}\n","<div class=\"bc-card-tdc\" (click)=\"selectCard()\">\n  <div class=\"bc-d-flex bc-justify-content-between\">\n    <bc-checkbox\n      *ngIf=\"cardType == 'checkbox'\"\n      [value]=\"componentId\"\n    ></bc-checkbox>\n\n    <bc-radio-group *ngIf=\"cardType !== 'checkbox'\" >\n      <bc-radio class=\"bc-my-2\" [value]=\"componentId\"></bc-radio>\n    </bc-radio-group>\n\n    <div>\n      <bc-logo [size]=\"'64px'\" [name]=\"logoName\" aria-hidden=\"false\" alt=\"creditCardFranchise\" tabindex=\"0\"></bc-logo>\n    </div>\n  </div>\n  <div class=\"bc-card-tdc-header\">\n    <div class=\"bc-card-tdc-title\">\n      {{ cardName | titlecase }}\n    </div>\n    <div class=\"bc-card-tdc-card-number\">{{ cardNumber | maskCardNumber}}</div>\n  </div>\n  <div class=\"bc-card-tdc-minimum-payment\">\n    <div class=\"bc-card-tdc-payment-title\">Pago mínimo</div>\n\n    <div class=\"bc-card-tdc-currency-container bc-d-flex bc-wrap\" *ngIf=\"minPayment\">\n      <span class=\"bc-card-tdc-currency-title\" *ngIf=\"minUsdPayment || (!minUsdPayment && showCurrencyAbbreviation)\">COP</span>\n      <span class=\"bc-card-tdc-amount cop\">\n        $ {{ (minPayment | formatAmount)?.int }},<span class=\"bc-card-tdc-cents\">{{ (minPayment | formatAmount)?.decimal }}</span>\n      </span>\n    </div>\n\n    <div class=\"bc-card-tdc-currency-container bc-d-flex bc-wrap\" *ngIf=\"minUsdPayment\">\n      <span class=\"bc-card-tdc-currency-title\" *ngIf=\"minPayment || (!minPayment && showCurrencyAbbreviation)\">USD</span>\n      <span class=\"bc-card-tdc-amount usd\">\n        $ {{ (minUsdPayment | formatAmount)?.int }},<span class=\"bc-card-tdc-cents\">{{ (minUsdPayment | formatAmount)?.decimal }}</span>\n      </span>\n    </div>\n\n  </div>\n  <span class=\"bc-card-tdc-due-date\">\n    <p class=\"bc-card-tdc-payment-title\">Fecha límite de pago</p>\n    <p class=\"bc-card-tdc-payment-date\">{{ dueDate }}</p>\n  </span>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule, CurrencyPipe } from '@angular/common';\nimport { BcCardTdcComponent } from './bc-card-tdc.component';\nimport { FormatAmountPipe } from './pipes/format-amount.pipe';\nimport { BcLogoModule } from '@bancolombia/design-system-web/bc-logo';\nimport { BcRadioModule } from '@bancolombia/design-system-web/bc-radio';\nimport { BcCheckboxModule } from '@bancolombia/design-system-web/bc-checkbox';\nimport { MaskCardNumberPipe } from './pipes/mask-card-number.pipe';\n\n@NgModule({\n  declarations: [\n    BcCardTdcComponent,\n    FormatAmountPipe,\n    MaskCardNumberPipe\n  ],\n  imports: [CommonModule, BcLogoModule.forRoot(), BcRadioModule, BcCheckboxModule],\n  exports: [BcCardTdcComponent],\n  providers: [CurrencyPipe],\n})\nexport class BcCardTdcModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i5","i6.MaskCardNumberPipe","i7.FormatAmountPipe"],"mappings":"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"}